{"version":3,"sources":["lesson-content sync /^/.//.*$","components/common/TwoPaneResizable.tsx","components/code-display/CodeHighlight.tsx","components/common/TooltipContainer.tsx","components/code-display/CodeLine.tsx","components/code-display/CodeChunk.tsx","components/code-display/CodeDisplay.tsx","firebase/firebase.ts","hooks/user.ts","hooks/useModuleCompletionState.ts","components/auth/SignInUpInputs.tsx","components/common/images/menu.svg","components/common/NavBar.tsx","components/common/PageNotFound.tsx","components/common/PageTint.tsx","components/learning-module/images/arrow-left.svg","components/learning-module/images/close.svg","components/learning-module/SideBar.tsx","components/learning-module/images/exclamation.svg","components/learning-module/images/checkmark.svg","components/learning-module/SubModuleProgressRow.tsx","components/learning-module/LearningContent.tsx","hooks/useAnimation.js","components/visualization/LinkedListNode.tsx","components/visualization/LinkedListPointer.tsx","components/visualization/VariableTableRow.tsx","components/visualization/Visualization.js","components/learning-module/LearningModule.js","components/common/images/destructure-icon.svg","components/common/Footer.tsx","components/learning-module/SummaryPage.js","components/catalog/CatalogCard.tsx","components/catalog/Catalog.tsx","components/auth/SignInUp.tsx","components/home/LinkedList.tsx","components/home/images/checkmark.svg","components/home/GuidedLearning.tsx","components/home/Catalog.tsx","components/home/images/arrow-right.svg","components/home/Free.tsx","components/home/images/arrow-down.svg","components/home/Hero.tsx","components/home/HomePage.tsx","components/common/LandingNavBar.tsx","components/home/LandingPage.tsx","components/home/images/conner-profile.jpg","components/home/images/hawk-profile.jpg","components/home/images/hari-profile.png","components/home/images/zach-profile.jpg","components/home/Team.tsx","components/home/About.tsx","components/common/DeviceTooSmall.tsx","hooks/useInterval.ts","components/privacy/CookieConsentBanner.js","components/privacy/PrivacySection.tsx","components/privacy/PrivacyPolicy.tsx","components/common/ScrollToTop.tsx","components/App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TwoPaneResizable","firstComponent","secondComponent","initialStartSize","splitHorizontal","firstComponentRef","firstComponentName","secondComponentName","useState","startSize","setstartSize","isResizing","setIsResizing","container","useRef","useEffect","document","addEventListener","onMouseUp","onMouseMove","removeEventListener","event","current","clientStart","clientY","clientX","bound","getBoundingClientRect","boundStart","top","left","containerSize","offsetHeight","offsetWidth","containerClass","dividerClass","paneClass","className","ref","style","flex","onMouseDown","preventDefault","CodeHighlight","language","children","isHidden","isSelected","isInline","codeRef","hljs","highlightBlock","TooltipContainer","isTooltipShown","setIsTooltipShown","tooltipTop","setTooltipTop","tooltipLeft","setTooltipLeft","containerRef","tooltipRef","tooltipClass","zIndex","onMouseEnter","size","bottom","height","onMouseLeave","CodeLine","lineNumber","isCollapsed","onChevronClick","tooltip","hasChevron","chevron","onClick","lineClass","CodeChunk","lineNumberStart","selectedLine","setIsCollapsed","maxHeight","setMaxHeight","calcHeight","codeContent","querySelector","setMaxHeightOneLine","window","length","codeLines","lineData","index","given","key","CodeDisplay","codeData","codeChunkKeyOffset","codeDisplayContainer","chunks","querySelectorAll","maxWidth","forEach","line","scrollWidth","width","currLineNumber","codeChunks","chunkObj","type","codeChunk","toString","doSignOut","firebase","auth","signOut","updateUserModule","moduleKey","moduleData","currentlySignedInUser","currentUser","updates","uid","database","update","getUserModule","once","then","snapshot","val","UserContext","createContext","user","useFirebaseUser","useContext","filenameToSubModuleKey","filename","substring","getApproveCookie","cookieComponents","cookie","split","destructureCookieApproveVal","pop","shift","useModuleCompletionState","completionState","setCompletionState","hasApprovedCookies","localModuleString","localStorage","getItem","JSON","parse","userModule","updateCompletionState","submodule","state","tempCompletionState","setItem","stringify","getCompletionState","getCurrentSubmodule","submodules","lastViewed","currentSubmodule","find","subModule","SignInUpInputs","isSignIn","onSignIn","history","useHistory","email","setEmail","password","setPassword","error","setError","labelChecked","setLabelChecked","setHasApprovedCookies","didSignUp","moduleSummaries","modules","directory","didSignIn","location","pathname","startsWith","push","signIn","Promise","reject","signInWithEmailAndPassword","catch","message","doSignInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","set","doCreateUserWithEmailAndPassword","headerText","footerPrompt","to","name","value","onChange","target","placeholder","checked","date","Date","setTime","getTime","toUTCString","test","String","toLowerCase","isValidEmail","NavBar","toggleSideBar","subModuleTitle","navBarType","showLoginDropdown","setShowLoginDropdown","onClickPageShouldCloseLogin","path","el","classList","contains","includes","backBtn","src","MenuIcon","alt","signOutLink","signInLink","signUpLink","catalogLink","aboutLink","PageNotFound","PageTint","clickedTint","tintShown","render","setRender","animationClass","onAnimationEnd","stopPropagation","SideBar","summaryLink","setSideBarShown","sideBarShown","isSidebarRight","showBackToSummary","hideControlsDivider","sidebarRightClass","LeftArrowIcon","CloseIcon","SubModuleProgressRow","completionStateChanged","link","moduleTitle","selected","shouldShowStartBtn","onClickLink","rowClass","isCompleted","setIsCompleted","progressIcon","ExclamationIcon","CheckmarkIcon","LearningContent","contentTitleString","contentParagraphs","codeDisplay","paragraphs","useMemo","paragraph","isInBold","isInItalic","isInCode","remainingNulls","text","character","characterIndex","endBoldIndex","remainingCloseBrace","endNormalIndex","i","filter","Boolean","SPEED_OFFSET","transform","element","webkitTransform","mozTransform","msTransform","oTransform","optionalTimeout","callback","delay","setTimeout","getCalculatedValue","oldValue","valueArray","reg","match","splice","parseValueString","unit","parseInt","useAnimation","onComplete","timeline","timelineIndex","isPlayingFullAnimation","nextAnim","currentAnimations","currentAnimationValues","startTime","timeElapsed","isPaused","largestCompleteTimes","completeStep","completeStepTimer","clearAnimations","clearTimeout","stepAnimation","isFinalStep","currAnimation","hasStarted","parseFloat","duration","timer","animation","addAnimation","options","shouldRunImmediately","onBeginStep","onCompleteStep","animations","largestCompleteTime","optionObj","targets","translateX","translateY","opacity","durationOffset","realDelay","completeTime","domElements","Array","isArray","transitionDuration","callAnimationCallback","futureValues","isFirstTimeCalled","transformValue","getComputedStyle","oldTransformX","oldTransformY","transformOld","transformMatrix","replace","transitionDurationReal","futureValue","timerID","pause","animationCallback","playFullAnimation","pauseAnimation","currentAnimation","LinkedListNode","nodeID","data","hasVariableTable","animationHeight","yValue","x","y","rx","dominantBaseline","textAnchor","r","cx","cy","LinkedListPointer","pointerID","textOffset","VariableTableRow","variable","rowID","VisualizationComponent","props","preStartAnimations","updateLine","setPlayDisabled","setAnimationComplete","ANIME_DURATION","selectedLineNumber","rendered","setRendered","allNodes","nodesToBeInserted","insertedNodes","allPointers","allVariableRows","insertedRows","onStepBegin","onStepEnd","animate","minDelay","time","delayedOptions","option","removeTrailingNull","arr","newArray","animationsArray","setAnimationsArray","parseAndCallAnimation","animationString","parameters","functionName","nodeNumber","createNewNode","createNewPointer","deleteNode","setNodeData","node","insertNodeAtIndex","movePointer","setPointerNull","elongatePointer","rows","createVarTable","addVarTableRow","removeVarTableRow","setRowData","animationStringArray","selectedDataIndex","offset","inserted","selectedValueIndex","nextLine","onPressPlay","onPressPause","useImperativeHandle","pointer","newPointerObj","pointerObj","newPointerLocation","otherPointerAtLocation","offest","nodeObj","currNode","currDataIndex","dataFieldContainer","currData","newDataGroup","createElementNS","setAttribute","newData","add","textContent","appendChild","concat","getMoveNodeInlineOptions","getSetPointerToNextOptions","distance","slice","oldNode","numNodes","movePointerObj","oldLocation","pointerAtPrevSpot","pointerAtNextSpot","timelineOffset","distanceBetweenNodes","Math","abs","distanceToCurrentMiddle","distanceFromNextOffset","finalDistance","direction","row","rowNum","indexOf","variableName","isLastRow","insertedRow","variableRow","rowContainer","navAndBottomHeight","documentElement","clientHeight","svgWdith","fill","shouldPreventRerender","prevProps","nextProps","Visualization","memo","forwardRef","LearningModule","setSelectedLine","playDisabled","animationComplete","hasFinishedAnimation","setHasFinishedAnimation","setData","trueSelectedLineMap","setTrueSelectedLineMap","loading","setLoading","selectedSubmoduleName","setSelectedSubModuleName","selectedSubModuleIndex","setSelectedSubModuleIndex","subModuleList","setSubModuleList","moduleName","setModuleName","subModuleFilename","setSubmoduleFilename","animationStrings","setAnimationStrings","setPreStartAnimations","tourStep","setTourStep","tourOpen","setTourOpen","learningContentPaneRef","visualizationRef","useParams","tourSteps","visibleSidebar","selector","content","position","nextOverride","tempData","moduleObj","tempSelectedSubModuleIndex","subModuleData","submoduleObj","require","tempTrueSelectedLineMap","iterationNumber","startingLine","tempAnimationStrings","loopCounter","loopIteration","maxLoops","nextAnimation","scrollTop","scrollLeft","currModuleIndex","filenameToPath","nextTourStep","click","prev","isComplete","noAnimations","disabled","currCompletionState","accentColor","closeWithMask","nextStep","prevStep","SHOW_SIDEBAR_TOUR_INDEX","dotClick","step","goToStep","steps","isOpen","onRequestClose","rounded","Footer","currentYear","getFullYear","href","DestructureLogo","SummaryPage","summaryHeightCalcString","setSummaryHeightCalcString","summaryModulesHeight","descriptionParagraphs","whatYouWillLearnParagraphs","realWorldApplicationsParagraphs","moduleLink","getStartedLink","title","endsWith","hasStartedModule","CatalogCard","description","comingSoon","Catalog","SignInUp","LinkedList","highlightIndex","setHighlightIndex","_","nodeClass","NUM_NODES","GuidedLearning","Free","landing","getStartedArrow","RightArrowIcon","viewBox","Hero","button","linkedList","getElementById","scrollIntoView","behavior","DownArrowIcon","HomePage","LandingNavBar","landingLink","about","LandingPage","Team","ConnerProfile","HawkProfile","HariProfile","ZachProfile","About","DeviceTooSmall","innerWidth","windowWidth","setWindowWidth","updateSize","reload","useInterval","savedCallback","setInterval","clearInterval","CookieConsentBanner","showModal","setShowModal","showBanner","setShowBanner","bannerBottom","setBannerBottom","speed","setSpeed","useLocation","setApproveCookie","PrivacySection","PrivacyPolicy","rel","ScrollToTop","scrollTo","App","initializing","setState","unsubscribe","onAuthStateChanged","useAuth","Provider","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.286590d4.chunk.js","sourcesContent":["var map = {\n\t\"./linked-list/addNElementsToList\": 39,\n\t\"./linked-list/addNElementsToList.json\": 39,\n\t\"./linked-list/addingAnotherElement\": 40,\n\t\"./linked-list/addingAnotherElement.json\": 40,\n\t\"./linked-list/changingDataAtPositionN\": 41,\n\t\"./linked-list/changingDataAtPositionN.json\": 41,\n\t\"./linked-list/changingDataInANode\": 42,\n\t\"./linked-list/changingDataInANode.json\": 42,\n\t\"./linked-list/creatingALinkedList\": 43,\n\t\"./linked-list/creatingALinkedList.json\": 43,\n\t\"./linked-list/insertingNodesAtTheHead\": 44,\n\t\"./linked-list/insertingNodesAtTheHead.json\": 44,\n\t\"./linked-list/iteratingThroughAList\": 45,\n\t\"./linked-list/iteratingThroughAList.json\": 45,\n\t\"./linked-list/walkthrough\": 46,\n\t\"./linked-list/walkthrough.json\": 46,\n\t\"./linked-list/whatIsALinkedList\": 47,\n\t\"./linked-list/whatIsALinkedList.json\": 47,\n\t\"./moduleSummaries\": 15,\n\t\"./moduleSummaries.json\": 15\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 282;","import React, { useEffect, useRef, useState } from \"react\";\n\ntype FixMeLater = any;\n\n/**\n * Required Props:\n * firstComponent {React Component} - Component for left/top pane\n * secondComponent {React Component} - Component for right/bottom pane\n *\n * Optional props:\n * initialStartSize {number} - Starting size percentage of left/top pane, defaults to 50%\n * splitHorizontal {boolean} - True = horizontal divider, defaults to false\n * firstComponentRef {Ref} - Ref created with useRef to be the container div of firstComponent\n *                           This is useful for resetting scroll heights\n */\ntype Props = {\n  firstComponent: React.Component;\n  secondComponent: React.Component;\n  initialStartSize?: number;\n  splitHorizontal?: boolean;\n  firstComponentRef?: FixMeLater;\n  firstComponentName?: string;\n  secondComponentName?: string;\n};\n\nfunction TwoPaneResizable({\n  firstComponent,\n  secondComponent,\n  initialStartSize,\n  splitHorizontal,\n  firstComponentRef,\n  firstComponentName,\n  secondComponentName,\n}: Props) {\n  const [startSize, setstartSize] = useState(\n    initialStartSize != null ? initialStartSize : 50\n  );\n  const [isResizing, setIsResizing] = useState(false);\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", onMouseUp);\n    document.addEventListener(\"mousemove\", onMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mouseup\", onMouseUp);\n      document.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  });\n\n  const onMouseMove = (event: FixMeLater) => {\n    if (!isResizing) {\n      return;\n    }\n\n    if (container.current !== null) {\n      const clientStart = splitHorizontal ? event.clientY : event.clientX;\n      const bound = container.current.getBoundingClientRect();\n      const boundStart = splitHorizontal ? bound.top : bound.left;\n      const containerSize = splitHorizontal\n        ? container.current.offsetHeight\n        : container.current.offsetWidth;\n      setstartSize(((clientStart - boundStart) / containerSize) * 100);\n    }\n  };\n\n  const onMouseUp = () => {\n    setIsResizing(false);\n  };\n\n  const onMouseDown = (event: FixMeLater) => {\n    event.preventDefault();\n    setIsResizing(true);\n  };\n\n  const containerClass = splitHorizontal\n    ? \"two-column-container-horizontal\"\n    : \"two-column-container\";\n  const dividerClass = splitHorizontal\n    ? \"two-column-divider-horizontal\"\n    : \"two-column-divider\";\n  const paneClass = isResizing\n    ? splitHorizontal\n      ? \"pane pane-resizing-horizontal\"\n      : \"pane pane-resizing\"\n    : \"pane\";\n\n  return (\n    <div className={containerClass} ref={container}>\n      <div\n        ref={firstComponentRef}\n        className={paneClass}\n        style={{ flex: startSize }}>\n        {firstComponentName != null ? (\n          <h2 className=\"pane-title\">{firstComponentName}</h2>\n        ) : null}\n        {firstComponent}\n      </div>\n      <div className={dividerClass} onMouseDown={onMouseDown} />\n      <div\n        className={paneClass + \" second-pane\"}\n        style={{ flex: 100 - startSize }}>\n        {secondComponentName != null ? (\n          <h2 className=\"pane-title\">{secondComponentName}</h2>\n        ) : null}\n        {secondComponent}\n      </div>\n    </div>\n  );\n}\n\nexport default TwoPaneResizable;\n","import React, { useEffect, useRef } from \"react\";\nimport hljs from \"highlight.js\";\nimport \"./highlight-styles/light.scss\"; // examples of options, most need to be downloaded: https://highlightjs.org/static/demo/\nimport \"./highlight-styles/hidden.scss\";\n\n/**\n * Required Props:\n * language {String} - \"java\", \"javascript\", etc\n *\n * Optional Props:\n * isHidden {Boolean} - defaults to false, true to \"gray\" out code\n * isSelected {Boolean} - defaults to false, true to show code as selected\n * isInline {Boolean} - defaults to false, true to make the code inline\n *\n * Children:\n * Any text to be highlighted should be a child.\n *\n * Example usage:\n * <CodeHighlight language=\"java\">int x = 5;</CodeHighlight>\n */\ntype FixMeLater = any;\n\ntype Props = {\n  language: string;\n  children: FixMeLater;\n  isHidden?: boolean;\n  isSelected?: boolean;\n  isInline?: boolean;\n};\n\nfunction CodeHighlight({\n  language,\n  children,\n  isHidden,\n  isSelected,\n  isInline,\n}: Props) {\n  const codeRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    if (codeRef.current) {\n      hljs.highlightBlock(codeRef.current);\n    }\n  });\n\n  return (\n    <span\n      className={\n        isHidden\n          ? \"hidden-code\"\n          : isSelected\n          ? \"selected-code\"\n          : \"standard-code\"\n      }>\n      {isInline ? (\n        <code className={language + \"code-format inline\"} ref={codeRef}>\n          {children}\n        </code>\n      ) : (\n        <pre className=\"code-format\">\n          <code className={language} ref={codeRef}>\n            {children}\n          </code>\n        </pre>\n      )}\n    </span>\n  );\n}\n\nexport default CodeHighlight;\n","import React, { useState, useRef, FunctionComponent } from \"react\";\n\ntype FixMeLater = any;\n\nconst TooltipContainer: FunctionComponent = ({ children }) => {\n  const [isTooltipShown, setIsTooltipShown] = useState(false);\n  const [tooltipTop, setTooltipTop] = useState(0);\n  const [tooltipLeft, setTooltipLeft] = useState(0);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  const showTooltip = (event: FixMeLater) => {\n    if (tooltipRef.current !== null && containerRef.current !== null) {\n      const size = tooltipRef.current.getBoundingClientRect();\n      setTooltipLeft(containerRef.current.getBoundingClientRect().left - 20);\n      setTooltipTop(\n        containerRef.current.getBoundingClientRect().bottom - size.height - 25\n      );\n      setIsTooltipShown(true);\n    }\n  };\n\n  const tooltipClass = isTooltipShown ? \"tooltip\" : \"tooltip invisible\";\n\n  return (\n    <div>\n      <div\n        style={{ zIndex: 4 }}\n        ref={containerRef}\n        onMouseEnter={showTooltip}\n        onMouseLeave={() => setIsTooltipShown(false)}>\n        <span className=\"tooltip-indicator\" />\n      </div>\n      <div\n        ref={tooltipRef}\n        className={tooltipClass}\n        style={{ top: tooltipTop, left: tooltipLeft }}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default TooltipContainer;\n","import React from \"react\";\nimport CodeHighlight from \"./CodeHighlight\";\nimport TooltipContainer from \"../common/TooltipContainer\";\n\n/**\n * Required Props:\n * code {String} - The line of code, i.e. \"int x = 5\"\n * language {String} - \"java\", \"javascript\", etc\n * lineNumber {number} - the line number in the code\n *\n * Optional Props:\n * onChevronClick {function} - Function called when chevron is clicked. If not present, no chevron\n * isCollapsed {Boolean} - Defaults to false\n * isHidden {Boolean} - Defaults to false, if true it shows as \"grayed out\". Must be true for chevron\n * isSelected {Boolean} - defaults to false, true to show code as selected\n * tooltip {String} - String to show as a tooltip with the line.\n */\ntype FixMeLater = any;\n\ntype Props = {\n  code: string;\n  language: string;\n  lineNumber: number;\n  isCollapsed?: boolean;\n  onChevronClick?: FixMeLater;\n  isHidden?: boolean;\n  isSelected?: boolean;\n  tooltip?: string;\n};\n\nfunction CodeLine({\n  code,\n  language,\n  lineNumber,\n  isCollapsed,\n  onChevronClick,\n  isHidden,\n  isSelected,\n  tooltip,\n}: Props) {\n  const hasChevron = onChevronClick != null && isHidden;\n  const chevron =\n    hasChevron && onChevronClick ? (\n      <span\n        className={isCollapsed ? \"chevron right\" : \"chevron bottom\"}\n        onClick={onChevronClick}\n      />\n    ) : null;\n\n  const lineClass = isSelected ? \"code-line selected-line\" : \"code-line\";\n\n  return (\n    <div className={lineClass}>\n      <div className=\"line-number\">{lineNumber}</div>\n      <div className={hasChevron ? \"chevron-container\" : \"\"}>\n        <div className=\"chevron-offset\">{chevron}</div>\n      </div>\n      {tooltip != null ? (\n        <TooltipContainer>\n          <span>{tooltip}</span>\n        </TooltipContainer>\n      ) : null}\n      <div className=\"code-content\">\n        <CodeHighlight\n          isHidden={isHidden}\n          isSelected={isSelected}\n          language={language}>\n          {code +\n            (onChevronClick != null && isHidden && isCollapsed ? \"...}\" : \"\")}\n        </CodeHighlight>\n      </div>\n    </div>\n  );\n}\n\nexport default CodeLine;\n","import React, { useState, useEffect } from \"react\";\nimport CodeLine from \"./CodeLine\";\n\n/**\n * Required Props:\n * code {Object} - The chunk of codes data as described in CodeDisplay.js\n * language {String} - \"java\", \"javascript\", etc\n * lineNumberStart {number} - the first line number in the code\n *\n * Optional Props:\n * isHidden {Boolean} - Defaults to false, if true it shows as \"grayed out\"\n * selectedLine {number} - Number of selected line. If undefined or -1 is passed, no lines are selected\n */\ntype FixMeLater = any;\n\ntype Props = {\n  code: FixMeLater;\n  language: string;\n  lineNumberStart: number;\n  isHidden?: boolean;\n  selectedLine?: number;\n};\n\nfunction CodeChunk({\n  code,\n  language,\n  lineNumberStart,\n  isHidden,\n  selectedLine,\n}: Props) {\n  const [isCollapsed, setIsCollapsed] = useState(isHidden);\n  const [maxHeight, setMaxHeight] = useState(0);\n\n  useEffect(() => {\n    const calcHeight = () => {\n      const codeContent: HTMLDivElement | null = document.querySelector(\n        \".code-content\"\n      );\n      if (codeContent) {\n        return codeContent.offsetHeight;\n      }\n    };\n\n    const setMaxHeightOneLine = () => {\n      const height = calcHeight();\n      if (height) {\n        setMaxHeight(height);\n      }\n    };\n\n    if (isCollapsed) {\n      setMaxHeightOneLine();\n      window.addEventListener(\"resize\", setMaxHeightOneLine);\n    } else if (code.length > 1) {\n      window.removeEventListener(\"resize\", setMaxHeightOneLine);\n      const height = calcHeight();\n      if (height) {\n        setMaxHeight(height * code.length);\n      }\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", setMaxHeightOneLine);\n    };\n  }, [isCollapsed, code.length]);\n\n  const codeLines = code.map((lineData: FixMeLater, index: number) => {\n    const lineNumber = index + lineNumberStart;\n    return (\n      <CodeLine\n        language={language}\n        code={lineData.given}\n        lineNumber={lineNumber}\n        onChevronClick={index === 0 ? () => setIsCollapsed(!isCollapsed) : null}\n        isCollapsed={isCollapsed}\n        isHidden={isHidden}\n        isSelected={selectedLine === lineNumber}\n        tooltip={lineData.tooltip}\n        key={index}\n      />\n    );\n  });\n\n  let className = \"chunk\";\n  if (isCollapsed) {\n    className += \" chunk-collapsed\";\n  } else {\n    className += \" chunk-open\";\n  }\n  if (isHidden) {\n    className += \" hidden-chunk\";\n  }\n\n  // const style = maxHeight > 0 ? {\n  //   {\"maxHeight\": maxHeight}\n  // } : null;\n\n  let codeChunk: JSX.Element;\n\n  if (maxHeight > 0) {\n    codeChunk = (\n      <div className={className} style={{ maxHeight: maxHeight }}>\n        {codeLines}\n      </div>\n    );\n  } else {\n    codeChunk = <div className={className}>{codeLines}</div>;\n  }\n\n  return codeChunk;\n}\n\nexport default CodeChunk;\n","import React, { useEffect } from \"react\";\nimport CodeChunk from \"./CodeChunk\";\n\n/**\n * Required Props:\n * language {String} - \"java\", \"javascript\", etc\n * selectedLine {number} - line number to highlight, -1 to highlight nothing\n * codeChunkKeyOffset {String/Number} - Any key that will be unique to this module, such as subModuleName\n * codeData {Array<Obj>} - Code data as a JS object in format:\n [\n    {\n      type: \"auto\", \"loop\", \"hidden\", \"skipped\" // optional, default auto, how to display code (if it is looped over, never stopped on or grayed out/hidden)\n      loopCounter: [ints] // Required only for type \"loop\". Number of times the code executes. If array size > 1, it should be the same size as dropDownOptions, with the counts aligning to those.\n      code: {\n        java: [ // Array of objects, each representing 1 line of code.\n          {\n            given: \"code as string\",\n            tooltip: string // optional string of text to show as a tooltip with the code\n          },\n        ]\n      },\n      animations: [] // array of animation strings to play for line\n    },\n  ]\n */\ntype FixMeLater = any;\n\ntype Props = {\n  codeData: FixMeLater;\n  language: string;\n  selectedLine: number;\n  codeChunkKeyOffset: string | number;\n};\n\nfunction CodeDisplay({\n  codeData,\n  language,\n  selectedLine,\n  codeChunkKeyOffset,\n}: Props) {\n  // This is a bit hacky, but it listens for horizontal scrolls on the code display\n  // If any happen, it makes sure all lines stay the full width of the container,\n  // which keeps the background colors visable.\n  useEffect(() => {\n    const codeDisplayContainer = document.querySelector(\n      \".code-display-container\"\n    );\n    if (codeDisplayContainer) {\n      codeDisplayContainer.addEventListener(\"scroll\", () => {\n        const chunks: NodeListOf<HTMLElement> = document.querySelectorAll(\n          \".chunk\"\n        );\n        let maxWidth = 0;\n        chunks.forEach((line) => {\n          if (line.scrollWidth > maxWidth) {\n            maxWidth = line.scrollWidth;\n          }\n        });\n        chunks.forEach((line) => {\n          line.style.width = maxWidth + \"px\";\n        });\n      });\n    }\n  }, []);\n\n  let currLineNumber = 1;\n  const codeChunks = codeData.map((chunkObj: FixMeLater, index: number) => {\n    const { code, type } = chunkObj;\n    const codeChunk = (\n      <CodeChunk\n        language={language}\n        code={code[language]}\n        lineNumberStart={currLineNumber}\n        isHidden={type === \"hidden\"}\n        selectedLine={selectedLine}\n        key={index.toString() + codeChunkKeyOffset}\n      />\n    );\n    currLineNumber += code[language].length;\n    return codeChunk;\n  });\n  return <div className=\"code-display-container\">{codeChunks}</div>;\n}\n\nexport default CodeDisplay;\n","import firebase from \"firebase/app\";\n\n// TODO: Use async/await eventually\n// TODO: Reference inline TODOs below\n\ntype FixMeLater = any;\n\nexport const doCreateUserWithEmailAndPassword = (\n  email: string,\n  password: string\n) => {\n  return new Promise((resolve, reject) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(function (error) {\n        const { code, message } = error;\n        if (code === \"auth/weak-password\") {\n          reject(\"Password is too weak, please use a stronger password.\");\n        } else {\n          reject(message);\n        }\n      })\n      .then(() => {\n        resolve(true);\n      });\n    firebase\n      .database()\n      .ref(\"users/\" + firebase.auth().currentUser)\n      .set({\n        email: email,\n      });\n  });\n};\n\nexport const doSignInWithEmailAndPassword = (\n  email: string,\n  password: string\n) => {\n  let errorMsg = \"\";\n  return new Promise((resolve, reject) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(function (error) {\n        const { code, message } = error;\n        if (code === \"auth/wrong-password\") {\n          errorMsg = \"Incorrect password. Please try again.\";\n        } else {\n          errorMsg = message;\n        }\n        reject(errorMsg);\n      })\n      .then(() => {\n        resolve(true);\n      });\n  });\n};\n\nexport const doSignOut = () => {\n  return firebase.auth().signOut();\n};\n\n// TODO: Confirm that using console is the correct choice here.\nexport const deleteUser = () => {\n  let user = firebase.auth().currentUser;\n  if (user) {\n    user\n      .delete()\n      .then((res) => {\n        console.log(\"User removed\");\n      })\n      .catch(function (error) {\n        console.error(\"Could not delete the user\");\n      });\n  }\n};\n\nexport const addModule = (moduleData: FixMeLater) => {\n  // Get a key for a new set.\n  let newModuleKey = firebase.database().ref().child(\"modules\").push().key;\n\n  let updates: FixMeLater = {};\n  updates[\"/modules/\" + newModuleKey] = moduleData;\n\n  firebase.database().ref().update(updates);\n  return newModuleKey;\n};\n\nexport const updateUserModule = (moduleKey: string, moduleData: FixMeLater) => {\n  const currentlySignedInUser = firebase.auth().currentUser;\n  if (currentlySignedInUser) {\n    const uid = currentlySignedInUser.uid;\n\n    let updates: FixMeLater = {};\n    // This code will come into play when the user attempts a module\n    // The module id will be written under their user id, fixing the many-many\n    // relationship of modules to users\n    updates[\"/user-modules/\" + uid + \"/\" + moduleKey] = moduleData;\n\n    firebase.database().ref().update(updates);\n\n    return moduleData;\n  } else {\n    // TODO: Case where no user is currently signed in\n  }\n};\n\nexport const getUserModule = (moduleKey: string) => {\n  const currentlySignedInUser = firebase.auth().currentUser;\n  if (currentlySignedInUser) {\n    const uid = currentlySignedInUser.uid;\n    return firebase\n      .database()\n      .ref(\"/user-modules/\" + uid + \"/\" + moduleKey)\n      .once(\"value\")\n      .then(function (snapshot) {\n        return snapshot.val();\n      });\n  } else {\n    // TODO: Case where no user is currently signed in\n  }\n};\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\n\ntype FixMeLater = any;\n\nexport const UserContext = createContext<\n  { user: firebase.User } | { user: null }\n>({ user: null });\n\nexport const useFirebaseUser = () => {\n  return useContext(UserContext).user;\n};\n\nexport const useAuth = () => {\n  const [state, setState] = useState(() => {\n    const user = firebase.auth().currentUser;\n    return {\n      initializing: !user,\n      user,\n    };\n  });\n\n  function onChange(user: FixMeLater) {\n    setState({\n      initializing: false,\n      user,\n    });\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange);\n    return () => unsubscribe();\n  }, []);\n\n  return state;\n};\n","import { useEffect, useState } from \"react\";\nimport { useFirebaseUser } from \"./user\";\nimport { updateUserModule, getUserModule } from \"../firebase/firebase\";\n\ntype FixMeLater = any;\n\nexport const filenameToSubModuleKey = (filename: string) => {\n  return filename.substring(0, filename.length - \".json\".length);\n};\n\nexport const getApproveCookie = () => {\n  const cookies = \"; \" + document.cookie;\n  const cookieComponents = cookies.split(\"; destructure-cookie-approve=\");\n  if (cookieComponents.length === 2) {\n    const destructureCookieApproveVal = cookieComponents.pop();\n    if (destructureCookieApproveVal) {\n      return destructureCookieApproveVal.split(\";\").shift() === \"true\"; // TODO: Confirm this works!!\n    }\n  }\n  return false;\n};\n\n// Custom hook for handling completion state of submodules\nfunction useModuleCompletionState(module: FixMeLater) {\n  const [completionState, setCompletionState] = useState<FixMeLater>({});\n  const user = useFirebaseUser();\n  const hasApprovedCookies = getApproveCookie();\n\n  useEffect(() => {\n    if (!hasApprovedCookies) {\n      return;\n    }\n\n    if (user === null) {\n      const localModuleString = window.localStorage.getItem(module);\n      if (localModuleString) {\n        setCompletionState(JSON.parse(localModuleString));\n      }\n    } else {\n      const userModule = getUserModule(module);\n      if (userModule) {\n        userModule.then(setCompletionState);\n      }\n    }\n  }, [module, user, hasApprovedCookies]);\n\n  const updateCompletionState = (submodule: FixMeLater, state: string) => {\n    if (!hasApprovedCookies) {\n      return;\n    }\n\n    if (state === \"complete\") {\n      state = \"completed\";\n    }\n\n    const tempCompletionState: FixMeLater = { ...completionState };\n    tempCompletionState[filenameToSubModuleKey(submodule)] = state;\n    setCompletionState(tempCompletionState);\n\n    if (user == null) {\n      window.localStorage.setItem(module, JSON.stringify(tempCompletionState));\n    } else {\n      updateUserModule(module, tempCompletionState);\n    }\n  };\n\n  const getCompletionState = (filename: string) => {\n    if (!hasApprovedCookies) {\n      return \"incomplete\";\n    }\n\n    const key = filenameToSubModuleKey(filename);\n    if (completionState !== null && key in completionState) {\n      return completionState[key];\n    }\n    return \"incomplete\";\n  };\n\n  const getCurrentSubmodule = (submodules: FixMeLater) => {\n    if (!hasApprovedCookies) {\n      return filenameToSubModuleKey(submodules[0].filename);\n    }\n\n    const lastViewed = window.localStorage.getItem(\"last-viewed-\" + module);\n    if (lastViewed != null) {\n      return lastViewed;\n    }\n\n    if (completionState != null) {\n      const currentSubmodule = submodules.find((subModule: FixMeLater) => {\n        return (\n          completionState[filenameToSubModuleKey(subModule.filename)] !==\n          \"completed\"\n        );\n      });\n      if (currentSubmodule == null) {\n        return filenameToSubModuleKey(\n          submodules[submodules.length - 1].filename\n        );\n      }\n      return filenameToSubModuleKey(currentSubmodule.filename);\n    }\n    return filenameToSubModuleKey(submodules[0].filename);\n  };\n\n  return {\n    completionState,\n    updateCompletionState,\n    getCompletionState,\n    getCurrentSubmodule,\n  };\n}\n\nexport default useModuleCompletionState;\n","import React, { useState, Fragment } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  doSignInWithEmailAndPassword,\n  doCreateUserWithEmailAndPassword,\n} from \"../../firebase/firebase\";\nimport moduleSummaries from \"../../lesson-content/moduleSummaries.json\";\nimport { updateUserModule } from \"../../firebase/firebase\";\nimport { getApproveCookie } from \"../../hooks/useModuleCompletionState\";\n\ntype FixMeLater = any;\n\n// TODO: Confirm props are actually optional\n// TODO: Declare more specific function type for onSignIn prop\n/**\n * Optional props:\n * isSignIn: {boolean} - Defaults false, true to show sign in instead of sign up\n * onSignIn: {function} - Function to call when signed in\n */\ntype Props = {\n  isSignIn?: boolean;\n  onSignIn?: Function;\n};\n\nfunction SignInUpInputs({ isSignIn, onSignIn }: Props) {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // TODO: Potentially use better hook for error checking (i.e. use Error type vs string)\n  const [error, setError] = useState(\"\");\n  const [labelChecked, setLabelChecked] = useState(false);\n  // TODO: Confirm change from getApproveCookie() === \"true\" to getApproveCookie() worked\n  const [hasApprovedCookies, setHasApprovedCookies] = useState(\n    getApproveCookie()\n  );\n\n  const isValidEmail = (email: string) => {\n    // eslint-disable-next-line\n    let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailRegex.test(String(email).toLowerCase());\n  };\n\n  const onSubmit = (event: FixMeLater) => {\n    event.preventDefault();\n    if (!hasApprovedCookies) {\n      if (!labelChecked) {\n        setError(\"Please accept the privacy policy before continuing\");\n        return;\n      }\n      const date = new Date();\n      date.setTime(date.getTime() + 6 * 30 * 24 * 60 * 60 * 1000); // Expires in 6 months\n      document.cookie =\n        \"destructure-cookie-approve=true;expires=\" +\n        date.toUTCString() +\n        \";path=/\";\n      setHasApprovedCookies(true);\n    }\n\n    if (!isValidEmail(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    } else if (isSignIn) {\n      signIn();\n    } else {\n      signUp();\n    }\n  };\n\n  const didSignUp = () => {\n    moduleSummaries.modules\n      .map((module) => module.directory)\n      .forEach((module) => {\n        const localModuleString = window.localStorage.getItem(module);\n        if (localModuleString) {\n          updateUserModule(module, JSON.parse(localModuleString));\n        }\n      });\n  };\n\n  const didSignIn = () => {\n    // TODO: Cleaner way of checking if onSignIn is undefined or not?\n    if (window.location.pathname.startsWith(\"/learn\") && onSignIn) {\n      onSignIn();\n      return;\n    }\n    history.push(\"/learn\");\n  };\n\n  const signIn = () => {\n    doSignInWithEmailAndPassword(email, password)\n      .then(didSignIn)\n      .catch(setError);\n  };\n\n  const signUp = () => {\n    doCreateUserWithEmailAndPassword(email, password)\n      .then(didSignUp)\n      .then(didSignIn)\n      .catch(setError);\n  };\n\n  const headerText = isSignIn ? \"Sign In\" : \"Sign Up\";\n\n  const footerPrompt = isSignIn ? (\n    <p>\n      Not a member? <Link to=\"/signup\">Sign up for free!</Link>\n    </p>\n  ) : (\n    <p>\n      Not ready to sign up yet? <Link to=\"/learn\">Continue as guest</Link>\n    </p>\n  );\n\n  return (\n    <Fragment>\n      {error.length > 0 ? (\n        <div className=\"sign-in-up-error\">{error}</div>\n      ) : null}\n      <div className=\"sign-in-up-flex-container\">\n        <div className=\"sign-in-up-container\">\n          <h1>{headerText}</h1>\n          <div>\n            <input\n              className=\"sign-in-up-input\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(event) => setEmail(event.target.value)}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n            <input\n              id=\"password\"\n              className=\"sign-in-up-input password\"\n              name=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            {!hasApprovedCookies ? (\n              <label className=\"accept-cookie-label\">\n                I accept the <Link to=\"/privacy\">Privacy Policy</Link> and\n                opt-in to cookies.\n                <input\n                  name=\"accept-cookie\"\n                  type=\"checkbox\"\n                  checked={labelChecked}\n                  onChange={() => setLabelChecked(!labelChecked)}\n                />\n                <span className=\"checkmark\" />\n              </label>\n            ) : null}\n          </div>\n          <button onClick={onSubmit} className=\"hero-btn sign-in-up-button\">\n            <span className=\"bold\">{headerText}</span>\n          </button>\n          {footerPrompt}\n        </div>\n        {/* Festive background that may be used later. */}\n        {/* <div className=\"sign-in-up-circle-lg\"></div>\n        <div className=\"sign-in-up-circle-sm\"></div>\n        <div className=\"sign-in-up-circle-md\"></div> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SignInUpInputs;\n","export default __webpack_public_path__ + \"static/media/menu.1770b1d9.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { doSignOut } from \"../../firebase/firebase\";\nimport { useFirebaseUser } from \"../../hooks/user\";\nimport SignInUpInputs from \"../auth/SignInUpInputs\";\nimport MenuIcon from \"./images/menu.svg\";\n\ntype FixMeLater = any;\n\n// TODO: Potentially create a type or interface for the specific navBarType\n//       strings defined in the comment below\n\n/**\n * Required Props:\n * toggleSideBar {function} - Callback for toggling the sidebar\n * subModuleTitle {String} - Title of current submodule\n * navBarType {String} - String representing which version of the navbar to render\n *    Nav Bar Types: 'summary', 'module', 'homepage', 'catalog', 'sign-in', 'sign-up'\n */\ntype Props = {\n  toggleSideBar?: FixMeLater;\n  subModuleTitle?: string;\n  navBarType: string;\n};\n\nfunction NavBar({ toggleSideBar, subModuleTitle, navBarType }: Props) {\n  const [showLoginDropdown, setShowLoginDropdown] = useState(false);\n  const user = useFirebaseUser();\n\n  useEffect(() => {\n    const onClickPageShouldCloseLogin = (event: FixMeLater) => {\n      if (\n        showLoginDropdown &&\n        event.path.find(\n          (el: FixMeLater) =>\n            el.classList != null && el.classList.contains(\"sign-in-dropdown\")\n        ) == null\n      ) {\n        setShowLoginDropdown(false);\n      }\n    };\n\n    if (showLoginDropdown) {\n      document.addEventListener(\"click\", onClickPageShouldCloseLogin);\n    }\n    return () =>\n      document.removeEventListener(\"click\", onClickPageShouldCloseLogin);\n  }, [showLoginDropdown]);\n\n  let containerClass = \"nav-bar-container\";\n  if ([\"homepage\", \"catalog\", \"sign-in\", \"sign-up\"].includes(navBarType)) {\n    containerClass += \" homepage-nav-bar\";\n  } else if (navBarType === \"module\") {\n    containerClass += \" module-nav-bar\";\n  }\n\n  const backBtn =\n    navBarType === \"module\" ? (\n      <div className=\"nav-back-btn\">\n        <img src={MenuIcon} alt=\"Sidebar icon\" onClick={toggleSideBar} />\n        <p onClick={toggleSideBar}>{subModuleTitle}</p>\n      </div>\n    ) : null;\n\n  // Using a link here is a bit hacky but makes sure we don't have different styles compared to actual links\n  const signOutLink =\n    user != null ? (\n      <Link to={window.location.pathname} onClick={doSignOut}>\n        Log Out\n      </Link>\n    ) : null;\n\n  const signInLink =\n    user == null ? (\n      navBarType === \"module\" ? (\n        <Link\n          to={window.location.pathname}\n          onClick={() => setShowLoginDropdown(!showLoginDropdown)}>\n          Sign In\n        </Link>\n      ) : (\n        <Link to=\"/signin\">Sign In</Link>\n      )\n    ) : null;\n\n  const signUpLink = user == null ? <Link to=\"/signup\">Sign Up</Link> : null;\n\n  const catalogLink = <Link to=\"/learn\">Catalog</Link>;\n\n  const aboutLink = <Link to=\"/about\">About</Link>;\n\n  return (\n    <div className={containerClass}>\n      {showLoginDropdown ? (\n        <div className=\"sign-in-dropdown\">\n          <SignInUpInputs\n            isSignIn={true}\n            onSignIn={() => setShowLoginDropdown(false)}\n          />\n        </div>\n      ) : null}\n      {backBtn}\n      <h1>\n        <Link to=\"/\">destructure.io</Link>\n      </h1>\n      <div className=\"nav-links-container\">\n        {aboutLink}\n        {catalogLink}\n        {signInLink}\n        {signUpLink}\n        {signOutLink}\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Link } from \"react-router-dom\";\n\nfunction PageNotFound() {\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <div className=\"page-not-found\">\n        <h1>Oops!</h1>\n        <p>We can't find the page you are looking for.</p>\n        <p>\n          <Link to=\"/\">Click here to go back home.</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React, { useEffect, useState } from \"react\";\n\ntype FixMeLater = any;\n\n/**\n * Optional Props:\n * clickedTint {Function} - Called when the tint is clicked on\n * tintShown {boolean} - true if tint is shown, false otherwise\n */\ntype Props = {\n  clickedTint: Function;\n  tintShown: boolean;\n};\n\nfunction PageTint({ clickedTint, tintShown }: Props) {\n  const [render, setRender] = useState(tintShown);\n\n  useEffect(() => {\n    if (tintShown) {\n      setRender(true);\n    }\n  }, [tintShown]);\n\n  const onAnimationEnd = () => {\n    if (!tintShown) {\n      setRender(false);\n    }\n  };\n\n  const onClick = (event: FixMeLater) => {\n    event.stopPropagation();\n    if (clickedTint != null) {\n      clickedTint();\n    }\n  };\n\n  const animationClass = tintShown ? \"tint-fade-in\" : \"tint-fade-out\";\n  return render ? (\n    <div\n      className={\"page-tint \" + animationClass}\n      onAnimationEnd={onAnimationEnd}\n      onClick={onClick}\n    />\n  ) : null;\n}\n\nexport default PageTint;\n","export default __webpack_public_path__ + \"static/media/arrow-left.bf7374d6.svg\";","export default __webpack_public_path__ + \"static/media/close.ffcded2c.svg\";","import React, { useEffect, useState, Fragment } from \"react\";\nimport PageTint from \"../common/PageTint\";\nimport { useHistory } from \"react-router-dom\";\nimport LeftArrowIcon from \"./images/arrow-left.svg\";\nimport CloseIcon from \"./images/close.svg\";\n\ntype FixMeLater = any;\n\n/**\n * Required Props:\n * children {React Node} - Content to be contained in the sideBar\n * setSideBarShown {function} - set if the sideBar should be shown\n * sideBarShown {boolean} - true if sideBar is showing, else false\n *\n * Optional Props:\n * headerText {String} - Heading to display for the sidebar\n * summaryLink {String} - Link for clicking header text. i.e. /learn/linked-list\n * isSidebarRight {Boolean} - true ot put sidebar on right side of screen. Defaults false.\n * showBackToSummary {Boolean} - True to add a back to summary page button. False to hide it. Defaults false.\n * hideControlsDivider {Boolean} - True to hide the line under the close button. Defaults false.\n *\n */\ntype Props = {\n  children: JSX.Element;\n  setSideBarShown: Function;\n  sideBarShown: boolean;\n  headerText?: string;\n  summaryLink?: string;\n  isSidebarRight?: boolean;\n  showBackToSummary?: boolean;\n  hideControlsDivider?: boolean;\n};\n\nfunction SideBar({\n  children,\n  headerText,\n  summaryLink,\n  setSideBarShown,\n  sideBarShown,\n  isSidebarRight,\n  showBackToSummary,\n  hideControlsDivider,\n}: Props) {\n  const history = useHistory();\n  const [render, setRender] = useState(sideBarShown);\n\n  useEffect(() => {\n    if (sideBarShown) {\n      setRender(true);\n    }\n  }, [sideBarShown]);\n\n  const onAnimationEnd = () => {\n    if (!sideBarShown) {\n      setRender(false);\n    }\n  };\n\n  // Don't click on things below the sideBar\n  const stopPropagation = (event: FixMeLater) => {\n    event.stopPropagation();\n  };\n\n  const onClickGoBackSummary = () => {\n    if (summaryLink != null) {\n      history.push(summaryLink);\n    }\n  };\n\n  const animationClass = sideBarShown ? \"sidebar-fade-in\" : \"sidebar-fade-out\";\n  const sidebarRightClass = isSidebarRight === true ? \" sidebar-right\" : \"\";\n  return render ? (\n    <Fragment>\n      <PageTint\n        clickedTint={() => setSideBarShown(false)}\n        tintShown={sideBarShown}\n      />\n      <div\n        className={\"sidebar \" + animationClass + sidebarRightClass}\n        onClick={stopPropagation}\n        onAnimationEnd={onAnimationEnd}>\n        <div\n          className={\n            \"sidebar-controls\" +\n            (hideControlsDivider ? \" hide-bottom-border\" : \"\")\n          }>\n          <div className=\"go-back-summary\" onClick={onClickGoBackSummary}>\n            {showBackToSummary === true ? (\n              <Fragment>\n                <img src={LeftArrowIcon} alt=\"Arrow Left Icon\" />\n                <p>Back To Module Overview</p>\n              </Fragment>\n            ) : null}\n          </div>\n          <img\n            className=\"sidebar-close\"\n            onClick={() => setSideBarShown(false)}\n            src={CloseIcon}\n            alt=\"Close Icon\"\n          />\n        </div>\n        {headerText != null ? (\n          <h1 className=\"sidebar-header\">{headerText}</h1>\n        ) : null}\n        {children}\n      </div>\n    </Fragment>\n  ) : null;\n}\n\nexport default SideBar;\n","export default __webpack_public_path__ + \"static/media/exclamation.5ae0fcaa.svg\";","export default __webpack_public_path__ + \"static/media/checkmark.7bd56c82.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ExclamationIcon from \"./images/exclamation.svg\";\nimport CheckmarkIcon from \"./images/checkmark.svg\";\n\ntype FixMeLater = any;\n\n/**\n * Required Props:\n * completionState {String} - One of \"completed\", \"flagged\" or \"incomplete\". Defaults \"incomplete\"\n * completionStateChanged {Function} - Function called when completion state is changed\n * link {String} - Path to the module. Example: /linked-list/reverse-list\n * moduleTitle {String} - Name of the module\n * selected {boolean} - Defaults false. True if is current sub-module\n * shouldShowStartBtn {Boolean} - Defaults false. True should be used when on summary page.\n *\n * Optional Props:\n * onClickLink {Function} - Function to be called when the link is clicked\n * rowClass - {String} - CSS class for the container\n */\ntype Props = {\n  completionState: String;\n  completionStateChanged: Function;\n  link: string;\n  moduleTitle: string;\n  selected: boolean;\n  shouldShowStartBtn: boolean;\n  onClickLink?: FixMeLater;\n  rowClass?: string;\n};\n\nfunction SubModuleProgressRow({\n  completionState,\n  completionStateChanged,\n  link,\n  moduleTitle,\n  selected,\n  shouldShowStartBtn,\n  onClickLink,\n  rowClass,\n}: Props) {\n  const [isCompleted, setIsCompleted] = useState(completionState);\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsCompleted(completionState);\n  }, [completionState]);\n\n  const toggleCompletionState = () => {\n    if (isCompleted === \"flagged\") {\n      completionStateChanged(\"completed\");\n      setIsCompleted(\"completed\");\n    } else if (isCompleted == null || isCompleted === \"incomplete\") {\n      completionStateChanged(\"flagged\");\n      setIsCompleted(\"flagged\");\n    } else {\n      completionStateChanged(\"incomplete\");\n      setIsCompleted(\"incomplete\");\n    }\n  };\n\n  const onClickContainer = () => {\n    if (!shouldShowStartBtn) {\n      history.push(link);\n      if (onClickLink) {\n        onClickLink();\n      }\n    }\n  };\n\n  const containerClass = selected\n    ? \"sub-module-progress-row-container progress-row-selected\"\n    : \"sub-module-progress-row-container\";\n  const exclamationIcon = <img src={ExclamationIcon} alt=\"Exclamation Icon\" />;\n  const checkmarkIcon = <img src={CheckmarkIcon} alt=\"Checkmark Icon\" />;\n  const progressIcon =\n    isCompleted === \"flagged\"\n      ? exclamationIcon\n      : isCompleted === \"completed\"\n      ? checkmarkIcon\n      : \"\";\n  return (\n    <div className={containerClass + (rowClass != null ? \" \" + rowClass : \"\")}>\n      <div className=\"progress-circle-filled\" onClick={toggleCompletionState}>\n        {progressIcon}\n      </div>\n      <div className=\"sub-module-title-container\" onClick={onClickContainer}>\n        <h3>\n          <Link to={link} onClick={onClickLink}>\n            {moduleTitle}\n          </Link>\n        </h3>\n      </div>\n      {shouldShowStartBtn ? (\n        <Link to={link} onClick={onClickLink}>\n          <button className=\"summary-module-btn\">Start</button>\n        </Link>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SubModuleProgressRow;\n","import React, { useMemo } from \"react\";\nimport CodeHighlight from \"../code-display/CodeHighlight\";\n\ntype FixMeLater = any;\n\n/**\n * Required Props:\n * contentTitleString {String} – String representing the title a sub module\n * contentParagraphs {Array} – An array of strings representing paragraphs\n *  of content of a sub module\n * codeChunkKeyOffset {String} - unique key used tell which module we are on\n *\n * Optional props:\n * codeDisplay {React Component} - Component for displaying code\n */\ntype Props = {\n  contentTitleString: string;\n  contentParagraphs: FixMeLater;\n  codeChunkKeyOffset: string;\n  codeDisplay?: FixMeLater;\n};\n\nfunction LearningContent({\n  contentTitleString,\n  contentParagraphs,\n  codeChunkKeyOffset,\n  codeDisplay,\n}: Props) {\n  // Memoize the paragraphs split into spans, because its pretty expensive\n  const paragraphs = useMemo(\n    () =>\n      contentParagraphs.map((paragraph: FixMeLater, index: number) => {\n        let isInBold = false;\n        let isInItalic = false;\n        let isInCode = false;\n        let remainingNulls = 0;\n        const text = [...paragraph]\n          .map((character, characterIndex) => {\n            if (remainingNulls > 0) {\n              remainingNulls--;\n              return null;\n            } else if (isInBold || isInItalic || isInCode) {\n              let endBoldIndex = characterIndex;\n              let remainingCloseBrace = 1;\n              for (; endBoldIndex < paragraph.length; endBoldIndex++) {\n                if (paragraph[endBoldIndex] === \")\") {\n                  remainingCloseBrace--;\n                } else if (paragraph[endBoldIndex] === \"(\") {\n                  remainingCloseBrace++;\n                }\n                if (remainingCloseBrace === 0) {\n                  break;\n                }\n              }\n              remainingNulls = endBoldIndex - characterIndex;\n              if (isInCode) {\n                isInCode = false;\n                return (\n                  <CodeHighlight\n                    key={(index + 1) * (characterIndex + 1)}\n                    language=\"java\"\n                    isInline={true}>\n                    {paragraph.substring(characterIndex, endBoldIndex)}\n                  </CodeHighlight>\n                );\n              }\n              const className = isInBold ? \"bold\" : isInItalic ? \"italic\" : \"\";\n              isInBold = false;\n              isInItalic = false;\n              return (\n                <span key={(index + 1) * characterIndex} className={className}>\n                  {paragraph.substring(characterIndex, endBoldIndex)}\n                </span>\n              );\n            } else if (\n              character === \"$\" &&\n              paragraph.substring(\n                characterIndex,\n                characterIndex + \"$bold(\".length\n              ) === \"$bold(\"\n            ) {\n              isInBold = true;\n              remainingNulls = \"bold(\".length;\n              return null;\n            } else if (\n              character === \"$\" &&\n              paragraph.substring(\n                characterIndex,\n                characterIndex + \"$italic(\".length\n              ) === \"$italic(\"\n            ) {\n              isInItalic = true;\n              remainingNulls = \"italic(\".length;\n              return null;\n            } else if (\n              character === \"$\" &&\n              paragraph.substring(\n                characterIndex,\n                characterIndex + \"$code(\".length\n              ) === \"$code(\"\n            ) {\n              isInCode = true;\n              remainingNulls = \"code(\".length;\n              return null;\n            }\n\n            let endNormalIndex = characterIndex;\n            for (let i = characterIndex; i < paragraph.length; i++) {\n              if (paragraph[endNormalIndex] !== \"$\") {\n                endNormalIndex++;\n              }\n            }\n            remainingNulls += endNormalIndex - characterIndex - 1;\n            return paragraph.substring(characterIndex, endNormalIndex);\n          })\n          .filter(Boolean);\n\n        return <p key={index + codeChunkKeyOffset}>{text}</p>;\n      }),\n    [contentParagraphs, codeChunkKeyOffset]\n  );\n\n  return (\n    <div className=\"text-content-container\">\n      <h1>{contentTitleString}</h1>\n      <div className=\"text-content-paragraphs\">{paragraphs}</div>\n      <h2>Example Code</h2>\n      {codeDisplay}\n    </div>\n  );\n}\n\nexport default LearningContent;\n","import { useRef } from \"react\";\n\nconst SPEED_OFFSET = 1.2; // multiplies durations by this offset to make them faster/slower\n\n/**\n * Safer wrapper function around .style.transform = value\n *\n * @param  {HTMLElement} element - element to transform\n * @param  {string} value - the value to transform, example: 'translateY(100vh)'\n */\nfunction transform(element, value) {\n  // To be safe with old browsers, use all the prefix versions\n  element.style.webkitTransform = value;\n  element.style.mozTransform = value;\n  element.style.msTransform = value;\n  element.style.oTransform = value;\n  element.style.transform = value;\n}\n\nfunction optionalTimeout(callback, delay) {\n  if (delay != null && delay > 0) {\n    return setTimeout(callback, delay);\n  } else {\n    callback();\n  }\n}\n\nfunction getCalculatedValue(value, oldValue) {\n  const valueArray = parseValueString(value);\n  const unit =\n    valueArray[2] != null && valueArray[2].length > 0 ? valueArray[2] : \"\";\n  if (valueArray[0] === \"-=\") {\n    return parseInt(oldValue) - parseInt(valueArray[1]) + unit;\n  } else if (valueArray[0] === \"+=\") {\n    return parseInt(oldValue) + parseInt(valueArray[1]) + unit;\n  } else {\n    return value;\n  }\n}\n\n// Converts values like -=10px into array [-=, 10, px]\n// Order is always [-/+=, value, unit]\nfunction parseValueString(value) {\n  let reg = /^(-=|\\+=)?(-?[0-9]+)(.*)/;\n  return value.match(reg).splice(1);\n}\n\n// Custom hook for animating SVGs\nfunction useAnimation(onComplete) {\n  const timeline = useRef([]); // Array of callback functions for each line in animation\n  const timelineIndex = useRef(0);\n  const isPlayingFullAnimation = useRef(false);\n  const nextAnim = useRef(null);\n\n  /*\n  Array of animations for the currently active animation in the timeline\n  [\n    {\n    animation: () => void\n    delay: time in ms\n    timer: timerID, null if had 0 delay\n    duration: time in ms\n    pause: () => void // function to stop the animation\n    }\n  ]\n  */\n  const currentAnimations = useRef([]);\n  const currentAnimationValues = useRef([]);\n  const startTime = useRef(0); // time unpaused\n  const timeElapsed = useRef(0); // Only updates on pause\n  const isPaused = useRef(false);\n  const largestCompleteTimes = useRef([]);\n  const completeStep = useRef(() => {});\n  const completeStepTimer = useRef(null);\n\n  const clearAnimations = () => {\n    currentAnimations.current = [];\n    currentAnimationValues.current = [];\n    startTime.current = 0;\n    timeElapsed.current = 0;\n    isPaused.current = false;\n    largestCompleteTimes.current = [];\n    completeStep.current = () => {};\n    clearTimeout(completeStepTimer.current);\n    completeStepTimer.current = null;\n    timeline.current = [];\n    timelineIndex.current = 0;\n    isPlayingFullAnimation.current = false;\n    clearTimeout(nextAnim.current);\n    nextAnim.current = null;\n  };\n\n  /*\n  options: Array of animation options for each step in the animation\n  [{\n    targets: String selector or DOM element... or Array of those things\n    translateY: String exact value or +/-= value\n    translateX : ^^\n    width: ^^\n    height: ^^\n    opacity: exact value\n    duration: number ms\n    delay: number ms\n  }]\n  */\n  const addAnimation = (\n    options,\n    shouldRunImmediately = false,\n    onBeginStep,\n    onCompleteStep\n  ) => {\n    const animations = []; // Array of callbacks\n    let largestCompleteTime = 0; // The end time in ms of the last to finish step\n    options.forEach((optionObj) => {\n      const {\n        targets,\n        translateX,\n        translateY,\n        width,\n        height,\n        opacity,\n        duration,\n        delay,\n      } = optionObj;\n      const durationOffset = duration * SPEED_OFFSET;\n\n      const realDelay = !shouldRunImmediately && delay != null ? delay : 0;\n      const completeTime =\n        (duration != null ? durationOffset : 1000 * SPEED_OFFSET) +\n        (realDelay != null ? realDelay : 0);\n      if (completeTime > largestCompleteTime) {\n        largestCompleteTime = completeTime;\n      }\n\n      // Accept either dom elements or querySelector queries just like anime.js\n      const domElements = [];\n      if (Array.isArray(targets)) {\n        targets.forEach((target) => {\n          if (typeof target === \"string\") {\n            domElements.push(document.querySelector(target));\n          } else if (targets != null) {\n            // dom element\n            domElements.push(target);\n          }\n        });\n      } else {\n        if (typeof targets === \"string\") {\n          domElements.push(document.querySelector(targets));\n        } else if (targets != null) {\n          // dom element\n          domElements.push(targets);\n        }\n      }\n\n      // Convert transitions to \"1s\" syntax like CSS uses\n      const transitionDuration =\n        duration != null && !shouldRunImmediately\n          ? durationOffset / 1000 + \"s\"\n          : shouldRunImmediately\n          ? \"0s\"\n          : 1 * SPEED_OFFSET + \"s\";\n\n      animations.push(() => {\n        const callAnimationCallback = (isFirstTimeCalled = true, index = 0) => {\n          let futureValues;\n\n          // The function will be called again if the animation is paused, always\n          // use the values calculated the first time\n          if (isFirstTimeCalled) {\n            futureValues = domElements.map((element) => {\n              const style = window.getComputedStyle(element);\n\n              let transformValue;\n              let oldTransformX = \"0px\";\n              let oldTransformY = \"0px\";\n              const transformOld =\n                style.transform ||\n                style.webkitTransform ||\n                style.mozTransform ||\n                style.msTransform ||\n                style.oTransform;\n              if (transformOld != null && transformOld !== \"none\") {\n                const transformMatrix = transformOld\n                  .replace(\" \", \"\")\n                  .split(\",\");\n                oldTransformX = parseInt(transformMatrix[4]) + \"px\";\n                oldTransformY = parseInt(transformMatrix[5]) + \"px\";\n              }\n              if (translateX != null && translateY != null) {\n                const xValue = getCalculatedValue(translateX, oldTransformX);\n                const yValue = getCalculatedValue(translateY, oldTransformY);\n                transformValue = \"translate(\" + xValue + \",\" + yValue + \")\";\n              } else if (translateX != null) {\n                const xValue = getCalculatedValue(translateX, oldTransformX);\n                transformValue =\n                  \"translate(\" + xValue + \",\" + oldTransformY + \")\";\n              } else if (translateY != null) {\n                const yValue = getCalculatedValue(translateY, oldTransformY);\n                transformValue =\n                  \"translate(\" + oldTransformX + \",\" + yValue + \")\";\n              }\n\n              return {\n                transform: transformValue,\n                width:\n                  width != null\n                    ? getCalculatedValue(width, style.width)\n                    : style.width,\n                height:\n                  height != null\n                    ? getCalculatedValue(height, style.height)\n                    : style.height,\n                opacity,\n              };\n            });\n            currentAnimationValues.current.push(futureValues);\n          } else {\n            // If not the first load, just used the saved values\n            futureValues = currentAnimationValues.current[index];\n          }\n\n          // If the animation has started, subtract how long it has played for from its duration\n          const hasStarted = realDelay < timeElapsed.current;\n          const transitionDurationReal = hasStarted\n            ? (parseFloat(transitionDuration) * 1000 -\n                (timeElapsed.current - realDelay)) /\n                1000 +\n              \"s\"\n            : transitionDuration;\n          domElements.forEach((element, i) => {\n            element.style.transitionDuration = transitionDurationReal;\n            const futureValue = futureValues[i];\n\n            if (futureValue.transform != null) {\n              transform(element, futureValue.transform);\n            }\n\n            if (futureValue.width != null) {\n              element.style.width = futureValue.width;\n            }\n            if (futureValue.height != null) {\n              element.style.height = futureValue.height;\n            }\n            if (futureValue.opacity != null) {\n              element.style.opacity = futureValue.opacity;\n            }\n          });\n        };\n\n        // wait to call the animation under a delay\n        const timerID = optionalTimeout(callAnimationCallback, realDelay);\n\n        // Callback function for pausing the animation by setting the values\n        // to its current values\n        const pause = () => {\n          domElements.forEach((element) => {\n            const style = window.getComputedStyle(element);\n            transform(element, style.transform);\n            element.style.width = style.width;\n            element.style.height = style.height;\n            element.style.opacity = style.opacity;\n          });\n        };\n\n        // Keep track of the animations currently running so we can pause and restart them\n        currentAnimations.current.push({\n          animation: callAnimationCallback,\n          delay: realDelay,\n          duration: transitionDuration,\n          timer: timerID,\n          pause,\n        });\n      });\n    });\n\n    // Keep track of when animations will complete. This doesn't matter for\n    // animations running immediately, becaues they usually have 0 time.\n    if (!shouldRunImmediately) {\n      largestCompleteTimes.current.push(largestCompleteTime);\n    }\n\n    // Callback to call when the animation is first started\n    const animationCallback = () => {\n      // If there was a beginStep callback, call it\n      if (onBeginStep != null) {\n        onBeginStep();\n      }\n\n      // Reset the time elapsed and the current animations\n      currentAnimations.current = [];\n      currentAnimationValues.current = [];\n      timeElapsed.current = 0;\n      completeStep.current = () => {};\n\n      // Call each step of the animation\n      animations.forEach((animation) => {\n        if (animation != null) {\n          animation();\n        }\n      });\n\n      // Callback for when the animation ends\n      completeStep.current = (isFinalStep = false) => {\n        if (onCompleteStep != null) {\n          onCompleteStep();\n        }\n\n        // Reset everything on the last animation and call onComplete if it exists\n        if (isFinalStep) {\n          clearAnimations();\n          if (onComplete != null && isFinalStep) {\n            onComplete();\n          }\n        }\n      };\n\n      // completeStep will only work for animations in the timeline, set a timeout to call it\n      // based on the longest duration of any step to the animation.\n      if (!shouldRunImmediately) {\n        const isFinalStep =\n          timelineIndex.current !== 0 &&\n          timelineIndex.current >= timeline.current.length - 1;\n        completeStepTimer.current = setTimeout(\n          () => completeStep.current(isFinalStep),\n          largestCompleteTime\n        );\n      }\n    };\n\n    // Add the animation to the timeline and set the next animation so play full can work\n    if (shouldRunImmediately) {\n      animationCallback();\n    } else {\n      timeline.current.push(() => {\n        animationCallback();\n        if (\n          isPlayingFullAnimation.current &&\n          timelineIndex.current < timeline.current.length - 1\n        ) {\n          nextAnim.current = setTimeout(stepAnimation, largestCompleteTime);\n        }\n      });\n    }\n  };\n\n  const stepAnimation = () => {\n    if (timeline.current.length === 0) {\n      return;\n    }\n\n    // Keep track of start time so we can calculate time elapsed on pauses\n    startTime.current = new Date().getTime();\n    if (isPaused.current) {\n      // resume after was paused\n      isPaused.current = false;\n\n      // At this point, the timelineIndex is actually 1 ahead of what is currently animating\n      const isFinalStep =\n        timelineIndex.current !== 0 &&\n        timelineIndex.current > timeline.current.length - 1;\n      completeStepTimer.current = setTimeout(\n        () => completeStep.current(isFinalStep),\n        largestCompleteTimes.current[timelineIndex.current - 1] -\n          timeElapsed.current\n      );\n\n      // restart all of the paused steps in the paused animation\n      for (let i = 0; i < currentAnimations.current.length; i++) {\n        const currAnimation = currentAnimations.current[i];\n        const hasStarted = currAnimation.delay < timeElapsed.current;\n        if (\n          !hasStarted ||\n          currAnimation.delay + parseFloat(currAnimation.duration) * 1000 >\n            timeElapsed.current\n        ) {\n          currAnimation.timer = optionalTimeout(\n            () => currAnimation.animation(!hasStarted, i),\n            hasStarted ? 0 : currAnimation.delay - timeElapsed.current\n          );\n        }\n      }\n      if (isPlayingFullAnimation.current) {\n        nextAnim.current = setTimeout(\n          stepAnimation,\n          largestCompleteTimes.current[timelineIndex.current - 1] -\n            timeElapsed.current\n        );\n      }\n    } else {\n      timeline.current[timelineIndex.current]();\n      if (timelineIndex.current < timeline.current.length) {\n        timelineIndex.current++;\n      }\n    }\n    isPaused.current = false;\n  };\n\n  const playFullAnimation = () => {\n    isPlayingFullAnimation.current = true;\n    stepAnimation();\n  };\n\n  const pauseAnimation = () => {\n    isPaused.current = true;\n\n    // Calculate time passed on current animation\n    timeElapsed.current += new Date().getTime() - startTime.current;\n\n    // Stop future animation steps from playing\n    isPlayingFullAnimation.current = false;\n    clearTimeout(nextAnim.current);\n\n    // Stop future animations in the current step from playing and pause everything that is playing\n    for (let i = 0; i < currentAnimations.current.length; i++) {\n      const currentAnimation = currentAnimations.current[i];\n      clearTimeout(currentAnimation.timer);\n      if (\n        currentAnimation.delay < timeElapsed.current &&\n        currentAnimation.delay + parseFloat(currentAnimation.duration) * 1000 >\n          timeElapsed.current\n      ) {\n        currentAnimation.pause();\n      }\n    }\n\n    // Stop the onComplete timer\n    clearTimeout(completeStepTimer.current);\n  };\n\n  return {\n    addAnimation,\n    stepAnimation,\n    playFullAnimation,\n    pauseAnimation,\n    clearAnimations,\n    isPlayingFullAnimation,\n  };\n}\n\nexport default useAnimation;\n","import React from \"react\";\n\n/**\n * Required Props:\n * nodeID {String} - ID to apply to the node such as \"node1\"\n * data {String} - Initial data to put in the Node\n * hasVariableTable {boolean} - Determines the y position\n * animationHeight {number} - px height of the animation svg\n */\ntype Props = {\n  nodeID: string;\n  data: string;\n  hasVariableTable: boolean;\n  animationHeight: number;\n};\n\nfunction LinkedListNode({\n  nodeID,\n  data,\n  hasVariableTable,\n  animationHeight,\n}: Props) {\n  const yValue = hasVariableTable\n    ? animationHeight / 2 - 175\n    : animationHeight / 2 - 200;\n\n  return (\n    <svg x=\"50px\" y={yValue}>\n      <g id={nodeID} className=\"node hidden\">\n        <rect x=\"0\" y=\"0\" rx=\"12px\" />\n        <g className=\"node-header\">\n          <text x=\"50px\" y=\"20px\">\n            Node\n          </text>\n          <rect x=\"0px\" y=\"28px\" />\n        </g>\n        <g className=\"node-data-field\">\n          <text x=\"10px\" y=\"55px\">\n            data\n          </text>\n          <text x=\"60px\" y=\"55px\">\n            =\n          </text>\n          <rect x=\"85px\" y=\"39px\" />\n          <rect x=\"85px\" y=\"39px\" />\n          <g className=\"node-data-text-container\">\n            <text\n              className=\"node-data-text\"\n              id={nodeID + \"-data\"}\n              x=\"110px\"\n              y=\"51px\"\n              dominantBaseline=\"middle\"\n              textAnchor=\"middle\">\n              {data}\n            </text>\n          </g>\n        </g>\n        <g className=\"node-next-field\">\n          <text x=\"10px\" y=\"82px\">\n            next\n          </text>\n          <text x=\"60px\" y=\"82px\">\n            =\n          </text>\n          <rect x=\"85px\" y=\"66px\" />\n          <g className=\"node-pointer\">\n            <circle\n              r=\"7px\"\n              cx=\"110px\"\n              cy=\"76px\"\n              dominantBaseline=\"middle\"\n              textAnchor=\"middle\"\n            />\n            <rect id={nodeID + \"-pointer\"} width=\"0px\" x=\"110px\" y=\"74px\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default LinkedListNode;\n","import React from \"react\";\n\n/**\n * Required Props:\n * pointerID {String} - ID to apply to the node such as \"node1\"\n * name {String} - Display name of the pointer\n * hasVariableTable {boolean} - Determines the y position\n * animationHeight {number} - px height of the animation svg\n */\ntype Props = {\n  pointerID: string;\n  name: string;\n  hasVariableTable: boolean;\n  animationHeight: number;\n};\n\nfunction LinkedListPointer({\n  pointerID,\n  name,\n  hasVariableTable,\n  animationHeight,\n}: Props) {\n  // TODO this is a hack, because \"curr\" takes less space than \"head\", find a way to calc this\n  const textOffset = name === \"curr\" ? \"5px\" : \"0px\";\n\n  const yValue = hasVariableTable\n    ? animationHeight / 2 + 85\n    : animationHeight / 2 + 60;\n  return (\n    <svg id={pointerID + \"-container\"} x=\"0\" y={yValue}>\n      <g\n        id={pointerID}\n        className=\"hidden\"\n        style={{ transform: \"translateX(100px)\" }}>\n        <rect id={pointerID + \"-tip\"} width=\"4px\" height=\"75px\" x=\"20px\" />\n        <circle r=\"4px\" cx=\"22px\" cy=\"75px\" />\n        <text x={textOffset} y=\"100px\">\n          {name}\n        </text>\n      </g>\n    </svg>\n  );\n}\n\nexport default LinkedListPointer;\n","import React from \"react\";\n\n/**\n * Required Props:\n * variable {string} - The name of the variable\n * value {string} - the starting value of the row\n * rowID {String} - ID of the row\n */\ntype Props = {\n  variable: string;\n  value: string;\n  rowID: string;\n};\n\nfunction VariableTableRow({ variable, value, rowID }: Props) {\n  return (\n    <g className=\"var-table-row\" id={rowID}>\n      <rect className=\"row-bg\"></rect>\n      <rect className=\"row-cell\" x=\"4px\" y=\"4px\" rx=\"2px\"></rect>\n      <rect className=\"row-cell\" x=\"102px\" y=\"4px\" rx=\"2px\"></rect>\n      <text\n        className=\"variable-value\"\n        x=\"49px\"\n        y=\"17px\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\">\n        {variable}\n      </text>\n      <g className=\"data-value-container\">\n        <text\n          className=\"data-value\"\n          x=\"149px\"\n          y=\"17px\"\n          dominantBaseline=\"middle\"\n          textAnchor=\"middle\">\n          {value}\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport default VariableTableRow;\n","import React, {\n  useEffect,\n  memo,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport useAnimation from \"../../hooks/useAnimation\";\nimport LinkedListNode from \"./LinkedListNode\";\nimport LinkedListPointer from \"./LinkedListPointer\";\nimport VariableTableRow from \"./VariableTableRow\";\n\n/**\n * Required Props:\n * animations {String[]} – Array of Animation strings as defined below\n * updateLine {Function} - Callback run to update the line number of parent\n * setAnimationComplete {Function} - Callback run when the animation finishes\n * preStartAnimations {String[]} – Array of Animation strings as defined below to have complete before the animation starts\n *\n * Animation strings are comma seperated values. The first value is the name of the function to be called.\n * Other values correspond to arguments to the functions, always as strings.\n * Below is a list of all possible animation string function names and their parameters.\n *\n *  createNewNode:\n *           parameter1 OPTIONAL: data - defaults its node number\n *           parameter2 OPTIONAL: Node ID - defaults to next available\n *           Example: \"createNewNode,4,#node3\"\n *\n *  createNewPointer:\n *           parameter1: Pointer ID\n *           parameter2: Display name\n *           Example: \"createNewPointer,#head-pointer,head\"\n *\n *  deleteNode:\n *           parameter1: Node ID\n *           Example: \"deleteNode,#node3\"\n *\n *  setNodeData:\n *           parameter1: Node ID\n *           parameter2: data to set\n *           Example: \"setNodeData,#node3,5\"\n *\n *  insertNodeAtIndex:\n *           parameter1: index to insert the node. Optionally pass \"tail\" to set as tail node. (We need this, because loops tail is ambiguous)\n *           parameter2 OPTIONAL: Node ID - if ommitted goes not last created node\n *           Example: \"insertNodeAtIndex,#node3,1\"\n *\n *  movePointer:\n *           parameter1: Pointer ID\n *           parameter2: Number of nodes to move it over, negative to move left\n *           Example: \"movePointer,#head-pointer,-1\"\n *\n *  setPointerNull:\n *           parameter1: Pointer ID\n *           Example: \"setPointerNull,#node3-pointer\"\n *\n *  elongatePointer:\n *           parameter1: Pointer ID\n *           Example: \"elongatePointer,#node3-pointer\"\n *\n *  createVarTable:\n *           Example: \"createVarTable\"\n *           Parameters: name,value,name,value,etc for rows to start as inserted\n *\n *  addVarTableRow:\n *           parameter1: variable name\n *           parameter2: starting value\n *           Example: \"addVarTableRow,i,0\"\n *\n * removeVarTableRow:\n *           parameter1: variable name\n *           Example: \"removeVarTableRow,i\"\n *\n * setRowData:\n *           parameter1: variable name\n *           parameter2: data\n *           Example: \"setRowData,i,25\"\n */\nfunction VisualizationComponent(props, ref) {\n  const {\n    animations,\n    preStartAnimations,\n    updateLine,\n    setPlayDisabled,\n    setAnimationComplete,\n  } = props;\n  const ANIME_DURATION = 1000;\n\n  // Line number in the code we are currently on, starting at 0.\n  // Note Line numbers are not including the hidden code at the top.\n  const selectedLineNumber = useRef(0);\n\n  const hasVariableTable = useRef(false); // True if createVarTable is in animations\n  const [rendered, setRendered] = useState(false); // Flips to true when all the SVGs we need are created\n\n  const allNodes = useRef([]); // Every node the animation will need, this gets filled on mount\n  const nodesToBeInserted = useRef([]); // Nodes that are visible but above the list\n  const insertedNodes = useRef([]); // Nodes in the list\n  const allPointers = useRef([]); // Every pointer the animation will need, this gets filled on mount\n  const allVariableRows = useRef([]); // All of the rows to insert, have name, value and selectedValueIndex\n  const insertedRows = useRef([]); // Row IDs inserted in variable table\n  const currentAnimations = useRef([]); // Animations for current line not added to timeline yet\n\n  const onAnimationComplete = () => {\n    selectedLineNumber.current = 0;\n    setPlayDisabled(false);\n    setAnimationComplete(true);\n\n    allNodes.current = [];\n    nodesToBeInserted.current = [];\n    insertedNodes.current = [];\n    allPointers.current = [];\n    allVariableRows.current = [];\n    insertedRows.current = [];\n    hasVariableTable.current = false;\n  };\n\n  const {\n    addAnimation,\n    stepAnimation,\n    playFullAnimation,\n    clearAnimations,\n    isPlayingFullAnimation,\n    pauseAnimation,\n  } = useAnimation(onAnimationComplete);\n\n  const onStepBegin = () => {\n    selectedLineNumber.current++;\n    updateLine(selectedLineNumber.current);\n  };\n\n  const onStepEnd = () => {\n    if (!isPlayingFullAnimation.current) {\n      setPlayDisabled(false);\n    }\n  };\n\n  const animate = (options, shouldRunImmediately = false) => {\n    if (shouldRunImmediately) {\n      addAnimation(options, shouldRunImmediately);\n    } else {\n      let minDelay = 0;\n      currentAnimations.current.forEach((animation) => {\n        const duration =\n          animation.duration != null ? animation.duration : ANIME_DURATION;\n        const delay = animation.delay != null ? animation.delay : 0;\n        const time = duration + delay;\n        if (time > minDelay) {\n          minDelay = time;\n        }\n      });\n      const delayedOptions = options.map((option) => {\n        return {\n          ...option,\n          delay: option.delay != null ? option.delay + minDelay : minDelay,\n        };\n      });\n      currentAnimations.current = [\n        ...currentAnimations.current,\n        ...delayedOptions,\n      ];\n    }\n  };\n\n  const addCurrentToTimeline = () => {\n    addAnimation(currentAnimations.current, false, onStepBegin, onStepEnd);\n    currentAnimations.current = [];\n  };\n\n  // Helper function to remove nulls, only from end of array\n  const removeTrailingNull = (arr) => {\n    const newArray = [...arr];\n    for (let i = newArray.length - 1; i >= 0; i--) {\n      if (newArray[i] == null) {\n        newArray.pop();\n      } else {\n        break;\n      }\n    }\n    return newArray;\n  };\n\n  const [animationsArray, setAnimationsArray] = useState(\n    removeTrailingNull(animations)\n  );\n\n  // Converts an animation string to funciton calls based on the rules listed\n  // in component header comment\n  const parseAndCallAnimation = (animationString, shouldRunImmediately) => {\n    const parameters = animationString.replace(/\\s/g, \"\").split(\",\");\n    const functionName = parameters[0];\n    if (functionName === \"createNewNode\") {\n      const nodeNumber =\n        insertedNodes.current.length + nodesToBeInserted.current.length + 1;\n      const data = parameters.length > 1 ? parameters[1] : nodeNumber;\n      const nodeID =\n        parameters.length > 2 ? parameters[2] : \"#node\" + nodeNumber;\n      createNewNode(nodeID, data, shouldRunImmediately);\n    } else if (functionName === \"createNewPointer\") {\n      createNewPointer(parameters[1], shouldRunImmediately);\n    } else if (functionName === \"deleteNode\") {\n      deleteNode(parameters[1], shouldRunImmediately);\n    } else if (functionName === \"setNodeData\") {\n      setNodeData(parameters[1], parameters[2], shouldRunImmediately);\n    } else if (functionName === \"insertNodeAtIndex\") {\n      const index =\n        parameters[1] === \"tail\" ? insertedNodes.current.length : parameters[1];\n      const node =\n        parameters.length === 2 ? nodesToBeInserted.current[0] : parameters[2];\n      insertNodeAtIndex(index, node, shouldRunImmediately);\n    } else if (functionName === \"movePointer\") {\n      movePointer(parameters[1], parameters[2], shouldRunImmediately);\n    } else if (functionName === \"setPointerNull\") {\n      setPointerNull(parameters[1], shouldRunImmediately);\n    } else if (functionName === \"elongatePointer\") {\n      elongatePointer(parameters[1], shouldRunImmediately);\n    } else if (functionName === \"createVarTable\") {\n      let rows = [];\n      for (let i = 1; i < parameters.length; i += 2) {\n        rows.push(parameters[i]);\n      }\n      createVarTable(rows, shouldRunImmediately);\n    } else if (functionName === \"addVarTableRow\") {\n      addVarTableRow(parameters[1], parameters[2], shouldRunImmediately);\n    } else if (functionName === \"removeVarTableRow\") {\n      removeVarTableRow(parameters[1], shouldRunImmediately);\n    } else if (functionName === \"setRowData\") {\n      setRowData(parameters[1], parameters[2], shouldRunImmediately);\n    }\n  };\n\n  // Reset everything when the submodule changes\n  useEffect(() => {\n    selectedLineNumber.current = 0;\n    allNodes.current = [];\n    nodesToBeInserted.current = [];\n    insertedNodes.current = [];\n    allPointers.current = [];\n    allVariableRows.current = [];\n    insertedRows.current = [];\n    hasVariableTable.current = false;\n    setRendered(false);\n    setPlayDisabled(false);\n    setAnimationsArray(removeTrailingNull(animations));\n    clearAnimations();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animations, preStartAnimations]);\n\n  // This callback gets called when rendered changes\n  // If rendered is true -> Setup the timeline\n  // If rendered is false -> Create the SVGs that the timeline will need, set renered true\n  useEffect(() => {\n    if (rendered) {\n      preStartAnimations.forEach((animationString) => {\n        parseAndCallAnimation(animationString, true);\n      });\n      animationsArray.forEach((animationStringArray) => {\n        // Add all of our animations to the timeline\n        if (animationStringArray !== null) {\n          animationStringArray.forEach((animationString) => {\n            parseAndCallAnimation(animationString, false);\n          });\n          addCurrentToTimeline();\n        } else {\n          addAnimation(\n            [{ duration: 0 }],\n            false,\n            () => {},\n            () => {\n              selectedLineNumber.current++;\n              if (!isPlayingFullAnimation.current) {\n                stepAnimation();\n              }\n            }\n          );\n        }\n      });\n    } else {\n      // Determine all of the nodes and pointers we will create\n      [[...preStartAnimations], ...animationsArray].forEach(\n        (animationStringArray) => {\n          if (animationStringArray !== null) {\n            animationStringArray.forEach((animationString) => {\n              const parameters = animationString.split(\",\");\n              const functionName = parameters[0];\n              if (functionName === \"createNewNode\") {\n                const nodeNumber = allNodes.current.length + 1;\n                const data = parameters.length > 1 ? parameters[1] : nodeNumber;\n                const nodeID =\n                  parameters.length > 2 ? parameters[2] : \"#node\" + nodeNumber;\n                allNodes.current.push({\n                  id: nodeID,\n                  data,\n                  selectedDataIndex: 0,\n                });\n              } else if (functionName === \"createNewPointer\") {\n                allPointers.current.push({\n                  id: parameters[1],\n                  name: parameters[2],\n                  location: 0,\n                  offset: 0,\n                  inserted: false,\n                });\n              } else if (functionName === \"addVarTableRow\") {\n                allVariableRows.current.push({\n                  name: parameters[1],\n                  value: parameters[2],\n                  selectedValueIndex: 0,\n                });\n              } else if (functionName === \"createVarTable\") {\n                hasVariableTable.current = true;\n                for (let i = 1; i < parameters.length; i += 2) {\n                  allVariableRows.current.push({\n                    name: parameters[i],\n                    value: parameters[i + 1],\n                    selectedValueIndex: 0,\n                  });\n                }\n              }\n            });\n          }\n        }\n      );\n      setRendered(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rendered]);\n\n  /********* Functions Accessable By Parent *********/\n\n  const nextLine = () => {\n    if (allNodes.current.length === 0) {\n      setRendered(false);\n    } else {\n      setPlayDisabled(true);\n      stepAnimation();\n    }\n  };\n\n  const onPressPlay = () => {\n    playFullAnimation();\n    setPlayDisabled(true);\n  };\n\n  const onPressPause = () => {\n    pauseAnimation();\n    setPlayDisabled(false);\n  };\n\n  useImperativeHandle(ref, () => ({\n    nextLine,\n    playFullAnimation: onPressPlay,\n    pauseAnimation: onPressPause,\n  }));\n\n  /********* Public Animations *********/\n\n  /**\n   * Animation that changes the opacity of the given node to 100%, giving the impression of creating a\n   * node.\n   * @param {String or DOM Element} nodeID ID to give the new node\n   * @param {String} data string to place in the data field for the new node\n   * @param {boolean} shouldRunImmediately if the animation should run with 0 duration\n   */\n  const createNewNode = (nodeID, data, shouldRunImmediately = false) => {\n    const animations = [];\n\n    // If we create the first node, always just insert it\n    if (insertedNodes.current.length === 0) {\n      insertedNodes.current.push(nodeID);\n      animate(\n        [\n          {\n            duration: 0,\n            targets: nodeID,\n            translateY: \"+=150px\",\n          },\n        ],\n        true\n      );\n    } else {\n      nodesToBeInserted.current.push(nodeID);\n    }\n    animations.push({\n      targets: nodeID,\n      opacity: \"1\",\n    });\n    animate(animations, shouldRunImmediately);\n  };\n\n  const createNewPointer = (pointer, shouldRunImmediately = false) => {\n    const newPointerObj = allPointers.current.find(\n      (pointerObj) => pointerObj.id === pointer\n    );\n    const newPointerLocation =\n      newPointerObj.location != null ? newPointerObj.location : 0;\n    const otherPointerAtLocation = allPointers.current.find((pointerObj) => {\n      return pointerObj.location === newPointerLocation && pointerObj.inserted;\n    });\n    const animations = [];\n    if (otherPointerAtLocation != null) {\n      animations.push({\n        targets: otherPointerAtLocation.id,\n        translateX: \"-=30px\",\n        duration: 500,\n      });\n      animations.push({\n        duration: 0,\n        targets: pointer,\n        translateX: \"+=30px\",\n      });\n      otherPointerAtLocation.offest = -30;\n      newPointerObj.offset = 30;\n    }\n\n    animations.push({\n      targets: pointer,\n      opacity: \"1\",\n      delay: otherPointerAtLocation != null ? 500 : 0,\n    });\n    newPointerObj.inserted = true;\n    animate(animations, shouldRunImmediately);\n  };\n\n  /**\n   * Animation that changes the opacity of the given node to 0%, giving the impression of deleting a\n   * node.\n   * @param {String or DOM Element} node A CSS Selector or DOM Element representing a linked list node\n   * @param {boolean} shouldRunImmediately if the animation should run with 0 duration\n   */\n  const deleteNode = (node, shouldRunImmediately = false) => {\n    animate(\n      [\n        {\n          targets: node,\n          opacity: \"0\",\n        },\n      ],\n      shouldRunImmediately\n    );\n  };\n\n  const setNodeData = (node, data, shouldRunImmediately = false) => {\n    const nodeObj = allNodes.current.find((currNode) => currNode.id === node);\n    const currDataIndex = nodeObj.selectedDataIndex;\n    const dataFieldContainer = document.querySelector(\n      node + \" > .node-data-field\"\n    );\n    const currData = document.querySelectorAll(\n      node + \" > .node-data-field .node-data-text-container\"\n    )[currDataIndex];\n\n    // Create new data text element to replace old data text element\n    const newDataGroup = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    newDataGroup.setAttribute(\"opacity\", \"0\");\n    newDataGroup.setAttribute(\"class\", \"node-data-text-container\");\n    const newData = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"text\"\n    );\n    newData.classList.add(\"text\");\n    newData.setAttribute(\"x\", \"110px\");\n    newData.setAttribute(\"y\", \"66px\");\n    newData.setAttribute(\"dominant-baseline\", \"middle\");\n    newData.setAttribute(\"text-anchor\", \"middle\");\n    newData.setAttribute(\"fill\", \"#000\");\n    newData.textContent = data;\n    newDataGroup.appendChild(newData);\n    dataFieldContainer.appendChild(newDataGroup);\n\n    // Fade out old data\n    animate(\n      [\n        {\n          targets: currData,\n          translateY: \"-=15px\",\n          opacity: \"0\",\n        },\n        {\n          targets: newDataGroup,\n          translateY: \"-=15px\",\n          opacity: \"1\",\n        },\n      ],\n      shouldRunImmediately\n    );\n\n    nodeObj.selectedDataIndex++;\n  };\n\n  /*\n   * Insert a node that was already rendered and set as visible in nodesToBeInserted.\n   * Note this cannot be used to move a node that is already inserted.\n   */\n  const insertNodeAtIndex = (index, node, shouldRunImmediately = false) => {\n    const animations = [];\n\n    // insert at head\n    if (index < 1) {\n      // Make room in Linked List for new node\n      animations.push({\n        targets: [\"#head-pointer\"].concat(insertedNodes.current),\n        translateX: \"+=200px\",\n      });\n\n      // Move new node inline with list\n      animations.push({\n        ...getMoveNodeInlineOptions(node),\n        delay: ANIME_DURATION,\n      });\n\n      // Set nodes next to point to the old head\n      animations.push({\n        ...getSetPointerToNextOptions(node + \"-pointer\"),\n        delay: ANIME_DURATION * 2,\n      });\n      insertedNodes.current.push(node);\n      insertedNodes.current = [node, ...insertedNodes.current];\n    } else if (index >= insertedNodes.current.length) {\n      // insert at tail\n      // move the node over\n      const distance = insertedNodes.current.length * 200;\n      animations.push({\n        targets: node,\n        translateX: \"+=\" + distance + \"px\",\n      });\n\n      // Move new node inline with list\n      animations.push({\n        ...getMoveNodeInlineOptions(node),\n        delay: ANIME_DURATION,\n      });\n\n      // Set old tail node pointer to new node\n      animations.push({\n        ...getSetPointerToNextOptions(\n          insertedNodes.current[insertedNodes.current.length - 1] + \"-pointer\"\n        ),\n        delay: ANIME_DURATION * 2,\n      });\n      insertedNodes.current.push(node);\n    } else {\n      // TODO insert in middle\n      //TODO\n      insertedNodes.current = [\n        ...insertedNodes.current.slice(0, index),\n        node,\n        ...insertedNodes.current.slice(index),\n      ];\n    }\n\n    nodesToBeInserted.current = nodesToBeInserted.current.filter(\n      (oldNode) => oldNode !== node\n    );\n    animate(animations, shouldRunImmediately);\n  };\n\n  /**\n   * Moves a pointer some number of nodes over from its current position\n   * @param numNodes {Number} Number of nodes to move the pointer. Negative to move left\n   */\n  const movePointer = (pointer, numNodes, shouldRunImmediately = false) => {\n    const movePointerObj = allPointers.current.find(\n      (pointerObj) => pointerObj.id === pointer\n    );\n    const oldLocation =\n      movePointerObj.location != null ? movePointerObj.location : 0;\n\n    const pointerAtPrevSpot = allPointers.current.find((pointerObj) => {\n      return (\n        pointerObj.location === oldLocation &&\n        pointerObj.inserted &&\n        pointerObj.id !== pointer\n      );\n    });\n    const pointerAtNextSpot = allPointers.current.find((pointerObj) => {\n      return (\n        pointerObj.location === oldLocation + numNodes &&\n        pointerObj.inserted &&\n        pointerObj.id !== pointer\n      );\n    });\n    let timelineOffset = 0; // Allows us to show multiple animations at once\n    const animations = [];\n\n    // Move the pointer at the next spot over\n    if (pointerAtNextSpot != null) {\n      animations.push({\n        duration: 500,\n        targets: pointerAtNextSpot.id,\n        translateX: numNodes > 0 ? \"+=30px\" : \"-=30px\",\n      });\n      timelineOffset += 500;\n      pointerAtNextSpot.offset = numNodes > 0 ? 30 : -30;\n    }\n\n    // Calculate the distance that the pointer needs to travel and which direction to travel in\n    const distanceBetweenNodes = Math.abs(200 * numNodes);\n    const distanceToCurrentMiddle =\n      movePointerObj.offset * (numNodes > 0 ? -1 : 1);\n    const distanceFromNextOffset = pointerAtNextSpot == null ? 0 : -30;\n    const finalDistance =\n      distanceBetweenNodes + distanceToCurrentMiddle + distanceFromNextOffset;\n    const direction = numNodes < 0 ? \"-=\" : \"+=\";\n\n    // Move the pointer to the desired distance in the correct direction\n    animations.push({\n      duration: 500,\n      targets: pointer,\n      translateX: direction + finalDistance + \"px\",\n      delay: timelineOffset,\n    });\n    timelineOffset += 500;\n\n    // Move the pointer on the previous node back to the center of its node\n    if (pointerAtPrevSpot != null) {\n      animations.push({\n        duration: 500,\n        targets: pointerAtPrevSpot.id,\n        translateX: pointerAtPrevSpot.offset > 0 ? \"-=30px\" : \"+=30px\",\n        delay: timelineOffset,\n      });\n      pointerAtPrevSpot.offset = 0;\n    }\n\n    movePointerObj.location += numNodes;\n    movePointerObj.offset =\n      pointerAtNextSpot != null ? (numNodes > 0 ? -30 : 30) : 0;\n    animate(animations, shouldRunImmediately);\n  };\n\n  const setPointerNull = (pointer, shouldRunImmediately = false) => {\n    animate(\n      [\n        {\n          targets: pointer + \"-tip\",\n          translateY: \"+=75px\",\n          height: \"-=75px\",\n        },\n      ],\n      shouldRunImmediately\n    );\n  };\n\n  const elongatePointer = (pointer, shouldRunImmediately = false) => {\n    animate(\n      [\n        {\n          targets: pointer + \"-tip\",\n          translateY: \"-=75px\",\n          height: \"+=75px\",\n        },\n      ],\n      shouldRunImmediately\n    );\n  };\n\n  /**\n   * create a new var table\n   * @param rows {Array[id]} Array of row ids to create\n   */\n  const createVarTable = (rows = [], shouldRunImmediately = false) => {\n    const animations = [];\n    animations.push({\n      targets: \"#var-table\",\n      opacity: \"1\",\n    });\n\n    if (rows != null) {\n      for (let row of rows) {\n        const rowID = \"#var-table-row-\" + row;\n        insertedRows.current.push(rowID);\n        const rowNum = insertedRows.current.indexOf(rowID) + 1;\n        animations.push({\n          targets: rowID,\n          translateY: rowNum * 26 + \"px\",\n          delay: ANIME_DURATION,\n        });\n      }\n    }\n    animate(animations, shouldRunImmediately);\n  };\n\n  // Add row to table\n  const addVarTableRow = (name, value, shouldRunImmediately = false) => {\n    const id = \"#var-table-row-\" + name;\n    insertedRows.current.push(id);\n    const rowNum = insertedRows.current.indexOf(id) + 1;\n    animate(\n      [\n        {\n          targets: id,\n          translateY: rowNum * 26 + \"px\",\n        },\n      ],\n      shouldRunImmediately\n    );\n  };\n\n  // Remove given row from table\n  const removeVarTableRow = (variableName, shouldRunImmediately = false) => {\n    const row = \"#var-table-row-\" + variableName;\n    const rowNum = insertedRows.indexOf(row) + 1;\n    const isLastRow = rowNum === insertedRows.current.length - 2;\n    const animations = [];\n\n    animations.push({\n      targets: row,\n      translateY: \"-=\" + rowNum * 26 + \"px\",\n    });\n\n    if (rowNum > 0) {\n      insertedRows.current.splice(rowNum - 1, 1);\n    }\n\n    if (insertedRows.current.length > 0) {\n      if (!isLastRow) {\n        for (let insertedRow of insertedRows) {\n          animations.push({\n            targets: insertedRow,\n            translateY: \"-=26px\",\n            delay: ANIME_DURATION,\n          });\n        }\n      }\n    } else {\n      animations.push({\n        targets: \"#var-table\",\n        opacity: \"0\",\n        delay: ANIME_DURATION,\n      });\n    }\n    animate(animations, shouldRunImmediately);\n  };\n\n  // Update row data\n  const setRowData = (variableName, data, shouldRunImmediately = false) => {\n    const row = \"#var-table-row-\" + variableName;\n    const variableRow = allVariableRows.current.find(\n      (row) => row.name === variableName\n    );\n    const currDataIndex = variableRow.selectedValueIndex;\n    const currData = document.querySelectorAll(\n      row + \" > .data-value-container\"\n    )[currDataIndex];\n    const rowContainer = document.querySelector(row);\n\n    // Create new data text element to replace old data text element\n    const newDataGroup = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    newDataGroup.setAttribute(\"opacity\", \"0\");\n    newDataGroup.setAttribute(\"class\", \"data-value-container\");\n    const newData = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"text\"\n    );\n    newData.classList.add(\"data-value\");\n    newData.setAttribute(\"x\", \"149px\");\n    newData.setAttribute(\"y\", \"32px\");\n    newData.setAttribute(\"dominant-baseline\", \"middle\");\n    newData.setAttribute(\"text-anchor\", \"middle\");\n    newData.setAttribute(\"fill\", \"#000\");\n    newData.textContent = data;\n    newDataGroup.appendChild(newData);\n    rowContainer.appendChild(newDataGroup);\n\n    // Fade out old data\n    animate(\n      [\n        {\n          targets: currData,\n          translateY: \"-=15px\",\n          opacity: \"0\",\n        },\n        {\n          targets: newDataGroup,\n          translateY: \"-=15px\",\n          opacity: \"1\",\n        },\n      ],\n      shouldRunImmediately\n    );\n\n    variableRow.selectedValueIndex++;\n  };\n\n  /********* Internal Only Animations *********/\n  const getSetPointerToNextOptions = (pointer) => {\n    return {\n      targets: pointer,\n      width: \"+=90px\",\n    };\n  };\n\n  const getMoveNodeInlineOptions = (node) => {\n    return {\n      targets: node,\n      translateY: \"+=150px\",\n    };\n  };\n\n  if (!rendered) {\n    return null;\n  }\n\n  const navAndBottomHeight =\n    document.querySelector(\".nav-bar-container\").offsetHeight +\n    document.querySelector(\".module-btn-container\").offsetHeight;\n  const animationHeight =\n    document.documentElement.clientHeight - navAndBottomHeight;\n\n  const svgWdith =\n    allNodes.current.length > 3 ? allNodes.current.length * 200 + 50 : \"100%\";\n  return (\n    <div className=\"visualization\">\n      <svg width={svgWdith} height={animationHeight}>\n        {allNodes.current.map((node, i) => {\n          const id = node.id.substring(1); // Remove the #\n          return (\n            <LinkedListNode\n              key={id + i}\n              animationHeight={animationHeight}\n              nodeID={id}\n              data={node.data}\n              hasVariableTable={hasVariableTable.current}\n            />\n          );\n        })}\n\n        {allPointers.current.map((pointer, i) => {\n          const id = pointer.id.substring(1); // Remove the #\n          return (\n            <LinkedListPointer\n              key={id + i}\n              animationHeight={animationHeight}\n              pointerID={id}\n              name={pointer.name}\n              hasVariableTable={hasVariableTable.current}\n            />\n          );\n        })}\n\n        <svg x=\"50px\" y=\"10px\">\n          <g id=\"var-table\" className=\"hidden\">\n            {allVariableRows.current.map((variable, i) => {\n              const id = \"var-table-row-\" + variable.name;\n              return (\n                <VariableTableRow\n                  key={id + i}\n                  rowID={id}\n                  variable={variable.name}\n                  value={variable.value}\n                />\n              );\n            })}\n            {/* Table Title */}\n            <g className=\"var-table-row\" id=\"var-table-title-row\">\n              <rect className=\"row-bg\"></rect>\n              <rect className=\"row-cell\" x=\"4px\" y=\"4px\" rx=\"2px\"></rect>\n              <rect className=\"row-cell\" x=\"102px\" y=\"4px\" rx=\"2px\"></rect>\n              <text\n                x=\"49px\"\n                y=\"17px\"\n                fill=\"#fff\"\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\">\n                Variable\n              </text>\n              <text\n                x=\"149px\"\n                y=\"17px\"\n                fill=\"#fff\"\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\">\n                Value\n              </text>\n            </g>\n          </g>\n        </svg>\n      </svg>\n    </div>\n  );\n}\n\n/**\n * Controls if the component should rerender. We only want this to occur\n * when a new animation is being loaded in. Otherwise rerendering will break\n * animations in progress.\n *\n * If returns true, don't rerender. Else rerender as usual\n */\nfunction shouldPreventRerender(prevProps, nextProps) {\n  return (\n    nextProps.animations === null ||\n    prevProps.animations === nextProps.animations\n  );\n}\n\n// ForwardRef to Allow the parent to access functions made public above\n// Memo so we can prevent the component from rerendering with  shouldPreventRerender\nconst Visualization = memo(\n  forwardRef(VisualizationComponent),\n  shouldPreventRerender\n);\n\nexport default Visualization;\n","import React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport Tour from \"reactour\";\nimport TwoPaneResizable from \"../common/TwoPaneResizable\";\nimport CodeDisplay from \"../code-display/CodeDisplay\";\nimport NavBar from \"../common/NavBar\";\nimport PageNotFound from \"../common/PageNotFound\";\nimport SideBar from \"./SideBar\";\nimport SubModuleProgressRow from \"./SubModuleProgressRow\";\nimport LearningContent from \"./LearningContent\";\nimport Visualization from \"../visualization/Visualization\";\nimport moduleSummaries from \"../../lesson-content/moduleSummaries.json\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport useModuleCompletionState, {\n  filenameToSubModuleKey,\n} from \"../../hooks/useModuleCompletionState\";\n\nconst language = \"java\"; // TODO make this selectable\n\n// TODO this component is getting way too big. It really should be broken down more and some of the state doesn't need to be state\nfunction LearningModule() {\n  const [selectedLine, setSelectedLine] = useState(-1);\n  const [playDisabled, setPlayDisabled] = useState(false);\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const [hasFinishedAnimation, setHasFinishedAnimation] = useState(false); // have they finished it at least once\n  const [sideBarShown, setSideBarShown] = useState(false);\n  const [data, setData] = useState(null);\n  const [trueSelectedLineMap, setTrueSelectedLineMap] = useState(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [selectedSubmoduleName, setSelectedSubModuleName] = useState(\"\");\n  const [selectedSubModuleIndex, setSelectedSubModuleIndex] = useState(0);\n  const [subModuleList, setSubModuleList] = useState([]);\n  const [moduleName, setModuleName] = useState(\"\");\n  const [subModuleFilename, setSubmoduleFilename] = useState(\"\");\n  const [animationStrings, setAnimationStrings] = useState([]);\n  const [preStartAnimations, setPreStartAnimations] = useState([]);\n  const [tourStep, setTourStep] = useState(0);\n  const [tourOpen, setTourOpen] = useState(true);\n  const learningContentPaneRef = useRef(null);\n  const visualizationRef = useRef(null);\n  const { module, submodule } = useParams();\n  const history = useHistory();\n  const {\n    getCompletionState,\n    updateCompletionState,\n  } = useModuleCompletionState(module);\n\n  const OPEN_HIDDEN_TOUR_INDEX = 3; // Index of when we should open code before highlighting\n  const STEP_TOUR_INDEX = 4; // Index of when pressing step moves tour step forward\n  const START_TOUR_INDEX = 7; // Index of when pressing play moves step forward\n  const STOP_TOUR_INDEX = 8; // Index of when pressing pause moves step forward\n  const SHOW_SIDEBAR_TOUR_INDEX = 9;\n  const tourSteps = [\n    {\n      visibleSidebar: false,\n      selector: \"\",\n      content: `Welcome to destructure.io! Click through this tutorial to learn\n                how to use the site and all of its features.`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".text-content-paragraphs\",\n      content: `Each lesson will start with a detailed explanation of what you will\n                learn, building off the previous lessons.`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".code-display-container\",\n      content: `With each lesson, there will also be a block of example code.\n                Don't worry about this code yet, you'll learn all this and more soon!`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".hidden-chunk\",\n      content: `Some code will start off collapsed. This code is supplementary to the\n                material of the current lesson, but always feel free to open it up to get more context!`,\n      position: \"top\",\n    },\n    {\n      nextOverride: () => {\n        visualizationRef.current.nextLine();\n        setTourStep(tourStep + 1);\n      },\n      visibleSidebar: false,\n      selector: \".step-btn\",\n      content: `To start an animation, press the step button.\n                This will animate one line of code at a time. Go ahead and press it!`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".visualization\",\n      content: `As you step through code, the visualization will update one step at a time!`,\n      position: \"left\",\n    },\n    {\n      visibleSidebar: false,\n      selector: \".selected-line\",\n      content: `With each step of the animation, the related line of code will highlight!`,\n      position: \"left\",\n    },\n    {\n      visibleSidebar: false,\n      selector: \".play-btn\",\n      content: `Alternatively, you can play the entire animation at once by clicking play!`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".pause-btn\",\n      content: `And of course you can pause animations if they are in progress!`,\n    },\n    {\n      nextOverride: () => {\n        setSideBarShown(true);\n        setTimeout(() => setTourStep(tourStep + 1), 500);\n      },\n      visibleSidebar: false,\n      selector: \".hamburger-icon\",\n      content: `Click on the menu icon to open the sidebar and track your progress!`,\n    },\n    {\n      visibleSidebar: true,\n      selector: \".progress-circle-filled\",\n      content: `Click these circles to flag lessons for later or mark them as complete.`,\n    },\n    {\n      visibleSidebar: false,\n      selector: \".next-btn\",\n      content: `That's all for now, press next to move on to the first lesson!`,\n    },\n  ];\n\n  useEffect(() => {\n    let tempData;\n    const moduleData = moduleSummaries.modules.find(\n      (moduleObj) => moduleObj.directory === module\n    );\n    if (moduleData == null) {\n      setError(true);\n      return;\n    }\n    let tempSelectedSubModuleIndex = 0;\n    let subModuleData = moduleData.submodules.find((submoduleObj) => {\n      tempSelectedSubModuleIndex++;\n      return submoduleObj.filename === submodule + \".json\";\n    });\n    if (subModuleData == null) {\n      subModuleData = moduleData.submodules[0];\n      tempSelectedSubModuleIndex = 1;\n    }\n    try {\n      tempData = require(\"../../lesson-content/\" +\n        module +\n        \"/\" +\n        subModuleData.filename);\n    } catch (e) {\n      setError(true);\n      return;\n    }\n    const tempTrueSelectedLineMap = [null]; // 0th line is null, lines start at 1, prevent a bunch of +-1\n    let iterationNumber = 1;\n    let startingLine = 1;\n    let tempAnimationStrings = [];\n    tempData.codeChunks.forEach((chunkObj) => {\n      const { code, type, loopCounter } = chunkObj;\n      if (type !== \"hidden\" && type !== \"skipped\") {\n        // TODO use loopCounter of selected input box\n        let loopIteration = 0;\n        let maxLoops = loopCounter != null ? loopCounter[0] : 1;\n        while (loopIteration < maxLoops) {\n          for (let i = 0; i < code[language].length; i++) {\n            tempTrueSelectedLineMap[iterationNumber] = startingLine + i;\n            if (\n              code[language][i].animations != null &&\n              code[language][i].animations.length > 0\n            ) {\n              if (Array.isArray(code[language][i].animations[0])) {\n                const nextAnimation =\n                  code[language][i].animations[loopIteration] != null &&\n                  code[language][i].animations[loopIteration].length > 0\n                    ? code[language][i].animations[loopIteration]\n                    : null;\n                tempAnimationStrings = [...tempAnimationStrings, nextAnimation];\n              } else {\n                tempAnimationStrings = [\n                  ...tempAnimationStrings,\n                  code[language][i].animations,\n                ];\n              }\n            } else {\n              tempAnimationStrings.push(null);\n            }\n            iterationNumber++;\n          }\n          loopIteration++;\n        }\n      }\n      startingLine += code[language].length;\n    });\n\n    if (learningContentPaneRef.current != null) {\n      learningContentPaneRef.current.scrollTop = 0;\n      learningContentPaneRef.current.scrollLeft = 0;\n    }\n\n    // Keep track of which module the resume button on summary page should go to\n    window.localStorage.setItem(\"last-viewed-\" + module, submodule);\n\n    setModuleName(moduleData.name);\n    setSubModuleList(moduleData.submodules);\n    setSelectedSubModuleIndex(tempSelectedSubModuleIndex);\n    setSelectedSubModuleName(subModuleData.name);\n    setSubmoduleFilename(subModuleData.filename);\n    setTrueSelectedLineMap(tempTrueSelectedLineMap);\n    setAnimationStrings(tempAnimationStrings);\n    setPreStartAnimations(tempData.preStartAnimations);\n    setData(tempData);\n    setSelectedLine(-1);\n    setLoading(false);\n    setAnimationComplete(false);\n    setHasFinishedAnimation(false);\n    setTourStep(0);\n  }, [module, submodule]); // Only run this function when the module or submodule changes\n\n  // Prevent showing errors while files are loaded in\n  if (loading) {\n    for (const currModuleIndex in moduleSummaries.modules) {\n      if (moduleSummaries.modules[currModuleIndex].directory === module) {\n        return null;\n      }\n    }\n    return <PageNotFound />;\n  }\n\n  if (error) {\n    return <PageNotFound />;\n  }\n\n  const setNextLine = () => {\n    if (tourStep === STEP_TOUR_INDEX) {\n      nextTourStep();\n    }\n\n    if (animationComplete) {\n      setSelectedLine(0);\n      setAnimationComplete(false);\n    }\n    visualizationRef.current.nextLine();\n  };\n\n  const startAnimation = () => {\n    if (tourStep === START_TOUR_INDEX) {\n      nextTourStep();\n    }\n\n    visualizationRef.current.playFullAnimation();\n  };\n\n  const stopAnimation = () => {\n    if (tourStep === STOP_TOUR_INDEX) {\n      nextTourStep();\n    }\n\n    visualizationRef.current.pauseAnimation();\n  };\n\n  const filenameToPath = (filename) => {\n    return \"/learn/\" + module + \"/\" + filenameToSubModuleKey(filename);\n  };\n\n  const onClickBack = () => {\n    history.push(\n      filenameToPath(subModuleList[selectedSubModuleIndex - 2].filename)\n    );\n  };\n\n  const onClickNext = () => {\n    const currCompletionState = getCompletionState(subModuleFilename);\n    const animComplete =\n      hasFinishedAnimation ||\n      animationStrings.length === 0 ||\n      selectedSubModuleIndex === subModuleList.length;\n    if (\n      animComplete &&\n      (currCompletionState == null || currCompletionState === \"incomplete\")\n    ) {\n      updateCompletionState(subModuleFilename, \"completed\");\n    }\n    if (selectedSubModuleIndex < subModuleList.length) {\n      history.push(\n        filenameToPath(subModuleList[selectedSubModuleIndex].filename)\n      );\n    } else {\n      history.push(\"/learn/\" + module);\n    }\n  };\n\n  const codeDisplay = (\n    <CodeDisplay\n      language={language}\n      codeData={data.codeChunks}\n      selectedLine={trueSelectedLineMap[selectedLine]}\n      codeChunkKeyOffset={selectedSubmoduleName}\n    />\n  );\n\n  const nextTourStep = () => {\n    if (tourSteps[tourStep].nextOverride != null) {\n      tourSteps[tourStep].nextOverride();\n      return;\n    }\n\n    if (\n      tourStep + 1 === OPEN_HIDDEN_TOUR_INDEX &&\n      document.querySelector(\".chunk-collapsed\") != null\n    ) {\n      document.querySelector(\".chevron.right\").click();\n      setTimeout(() => {\n        setTourStep((prev) => (prev < tourSteps.length - 1 ? prev + 1 : prev));\n      }, 500);\n      return;\n    }\n\n    if (\n      tourStep + 1 < tourSteps.length &&\n      tourSteps[tourStep].visibleSidebar &&\n      !tourSteps[tourStep + 1].visibleSidebar\n    ) {\n      setSideBarShown(false);\n    }\n\n    setTourStep((prev) => (prev < tourSteps.length - 1 ? prev + 1 : prev));\n  };\n\n  const prevTourStep = () => {\n    if (\n      tourStep - 1 === OPEN_HIDDEN_TOUR_INDEX &&\n      document.querySelector(\".chunk-collapsed\") != null\n    ) {\n      document.querySelector(\".chevron.right\").click();\n      setTimeout(() => {\n        setTourStep(OPEN_HIDDEN_TOUR_INDEX);\n      }, 500);\n      return;\n    }\n\n    if (tourStep === SHOW_SIDEBAR_TOUR_INDEX + 1) {\n      setSideBarShown(true);\n      // Add a delay so the sidebar can come back out\n      setTimeout(() => setTourStep(SHOW_SIDEBAR_TOUR_INDEX), 500);\n      return;\n    } else if (tourStep === SHOW_SIDEBAR_TOUR_INDEX) {\n      setSideBarShown(false);\n      // Add a delay so the sidebar can have time to go away\n      setTimeout(() => setTourStep(SHOW_SIDEBAR_TOUR_INDEX - 1), 500);\n      return;\n    }\n\n    setTourStep((prev) => (prev > 0 ? prev - 1 : prev));\n  };\n\n  const gotoTourStep = (step) => {\n    if (tourSteps[step].visibleSidebar && !sideBarShown) {\n      setSideBarShown(true);\n      setTimeout(() => setTourStep(step), 500);\n      return;\n    } else if (!tourSteps[step].visibleSidebar && sideBarShown) {\n      setSideBarShown(false);\n      setTimeout(() => setTourStep(step), 500);\n      return;\n    } else if (\n      step === OPEN_HIDDEN_TOUR_INDEX &&\n      document.querySelector(\".chunk-collapsed\") != null\n    ) {\n      document.querySelector(\".chevron.right\").click();\n      setTimeout(() => setTourStep(step), 500);\n      return;\n    }\n    setTourStep(step);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <SideBar\n          showBackToSummary={true}\n          headerText={moduleName + \" Lessons\"}\n          summaryLink={\"/learn/\" + module}\n          setSideBarShown={setSideBarShown}\n          sideBarShown={sideBarShown}>\n          {subModuleList.map((subModule, index) => {\n            return (\n              <SubModuleProgressRow\n                onClickLink={() => setSideBarShown(false)}\n                link={filenameToPath(subModule.filename)}\n                moduleTitle={index + \". \" + subModule.name}\n                completionState={getCompletionState(subModule.filename)}\n                completionStateChanged={(state) =>\n                  updateCompletionState(subModule.filename, state)\n                }\n                selected={index + 1 === selectedSubModuleIndex}\n                key={index}\n              />\n            );\n          })}\n        </SideBar>\n        <NavBar\n          navBarType=\"module\"\n          toggleSideBar={() => {\n            if (tourStep === SHOW_SIDEBAR_TOUR_INDEX) {\n              setTimeout(() => nextTourStep(), 500);\n            }\n            setSideBarShown(!sideBarShown);\n          }}\n          subModuleTitle={\n            selectedSubModuleIndex - 1 + \". \" + selectedSubmoduleName\n          }\n        />\n        <div className=\"learning-module-container\">\n          <TwoPaneResizable\n            firstComponentRef={learningContentPaneRef}\n            firstComponentName=\"Learn\"\n            secondComponentName=\"Visualization\"\n            firstComponent={\n              <LearningContent\n                contentTitleString={selectedSubmoduleName}\n                contentParagraphs={data.paragraphs}\n                codeChunkKeyOffset={selectedSubmoduleName}\n                codeDisplay={codeDisplay}\n              />\n            }\n            secondComponent={\n              <Visualization\n                animations={animationStrings}\n                preStartAnimations={\n                  preStartAnimations != null ? preStartAnimations : []\n                }\n                updateLine={setSelectedLine}\n                setPlayDisabled={setPlayDisabled}\n                setAnimationComplete={(isComplete) => {\n                  setAnimationComplete(isComplete);\n                  if (isComplete) {\n                    setHasFinishedAnimation(true);\n                  }\n                }}\n                ref={visualizationRef}\n              />\n            }\n            initialStartSize={45}\n          />\n        </div>\n        <div className=\"module-btn-container\">\n          <div className=\"back-next-container\">\n            {selectedSubModuleIndex > 1 ? (\n              <button onClick={onClickBack}>Back</button>\n            ) : null}\n          </div>\n          {data.noAnimations ? null : (\n            <div className=\"animate-btn-container\">\n              <button\n                className=\"play-btn\"\n                onClick={startAnimation}\n                disabled={playDisabled || animationComplete}>\n                Play\n              </button>\n              <button\n                className=\"pause-btn\"\n                onClick={stopAnimation}\n                disabled={!playDisabled}>\n                Pause\n              </button>\n              <button\n                className=\"step-btn\"\n                onClick={setNextLine}\n                disabled={playDisabled}>\n                {animationComplete ? \"Reset\" : \"Step\"}\n              </button>\n            </div>\n          )}\n          <div className=\"back-next-container next-btn\">\n            <button className=\"next-btn\" onClick={onClickNext}>\n              {selectedSubModuleIndex < subModuleList.length\n                ? \"Next\"\n                : \"Finish\"}\n            </button>\n          </div>\n        </div>\n      </div>\n      {submodule === \"walkthrough\" ? (\n        <Tour\n          accentColor=\"#5d42ff\"\n          closeWithMask={false}\n          nextStep={nextTourStep}\n          prevStep={prevTourStep}\n          dotClick={gotoTourStep}\n          goToStep={tourStep}\n          steps={tourSteps}\n          isOpen={tourOpen}\n          onRequestClose={() => setTourOpen(false)}\n          rounded={8}\n        />\n      ) : null}\n    </Fragment>\n  );\n}\n\nexport default LearningModule;\n","export default __webpack_public_path__ + \"static/media/destructure-icon.df0a8522.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DestructureLogo from \"./images/destructure-icon.svg\";\n\nfunction Footer() {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-link-container\">\n        <div className=\"footer-company-column\">\n          <h2>Destructure.io</h2>\n          <Link to=\"/about\">About</Link>\n          <a href=\"https://github.com/hawkticehurst/destructure-io\">Github</a>\n        </div>\n        <div className=\"footer-catalog-column\">\n          <h2>Catalog</h2>\n          <div className=\"footer-catalog-links\">\n            <Link to=\"/learn/arrays\">Arrays</Link>\n            <Link to=\"/learn/linked-list\">Linked Lists</Link>\n            <Link to=\"/learn/stacks\">Stacks</Link>\n            <Link to=\"/learn/queues\">Queues</Link>\n            <Link to=\"/learn/hash-tables\">Hash Tables</Link>\n            <Link to=\"/learn/trees\">Trees</Link>\n            <Link to=\"/learn/graphs\">Graphs</Link>\n          </div>\n        </div>\n      </div>\n      <hr />\n      <div className=\"footer-copyright-container\">\n        <div>\n          <img src={DestructureLogo} alt=\"Destructure.io Logo\" />\n        </div>\n        <p>Copyright © {currentYear} destructure.io</p>\n        <div className=\"footer-legal-container\">\n          <Link to=\"/privacy\">Privacy Policy</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport NavBar from \"../common/NavBar\";\nimport Footer from \"../common/Footer\";\nimport PageNotFound from \"../common/PageNotFound\";\nimport SubModuleProgressRow from \"./SubModuleProgressRow\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport moduleSummaries from \"../../lesson-content/moduleSummaries.json\";\nimport useModuleCompletionState, {\n  filenameToSubModuleKey,\n} from \"../../hooks/useModuleCompletionState\";\nimport { getUserModule } from \"../../firebase/firebase\";\nimport { useFirebaseUser } from \"../../hooks/user\";\n\nfunction SummaryPage() {\n  const history = useHistory();\n  const { module } = useParams();\n  const [summaryHeightCalcString, setSummaryHeightCalcString] = useState(\"\");\n  const containerRef = useRef(null);\n  const user = useFirebaseUser();\n  const {\n    getCompletionState,\n    updateCompletionState,\n    getCurrentSubmodule,\n  } = useModuleCompletionState(module);\n\n  useEffect(() => {\n    if (containerRef.current != null) {\n      // Calculate the height of the summary-modules-container based on summary-modules\n      const summaryModulesHeight = containerRef.current.getBoundingClientRect()\n        .height;\n      setSummaryHeightCalcString(summaryModulesHeight + 20);\n    }\n  }, []);\n\n  const moduleObj = moduleSummaries.modules.find(\n    (moduleObj) => moduleObj.directory === module\n  );\n  if (moduleObj == null) {\n    return <PageNotFound />;\n  }\n\n  const {\n    name,\n    descriptionParagraphs,\n    whatYouWillLearnParagraphs,\n    realWorldApplicationsParagraphs,\n    submodules,\n  } = moduleObj;\n  const moduleLink = \"/learn/\" + module;\n  const getStartedLink =\n    submodules != null\n      ? moduleLink + \"/\" + getCurrentSubmodule(submodules)\n      : null;\n  const title = \"Learn \" + name + (name.endsWith(\"s\") ? \"\" : \"s\");\n\n  const onClickHeroBtn = () => {\n    if (getStartedLink != null) {\n      history.push(getStartedLink);\n    }\n  };\n\n  const hasStartedModule =\n    user == null\n      ? window.localStorage.getItem(module) != null\n      : getUserModule(module) != null;\n\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n\n      <div className=\"summary-hero-container\">\n        <div className=\"summary-hero-content\">\n          <h1>{title}</h1>\n          <button\n            onClick={onClickHeroBtn}\n            className=\"hero-btn\"\n            disabled={getStartedLink == null}>\n            <span className=\"bold\">\n              {getStartedLink == null\n                ? \"Coming Soon\"\n                : hasStartedModule\n                ? \"Continue Module\"\n                : \"Get Started\"}\n            </span>\n          </button>\n        </div>\n        <div className=\"summary-hero-illustration-container\">\n          <div className=\"summary-hero-circle\" />\n        </div>\n      </div>\n\n      <div className=\"summary-page-content\">\n        <div className=\"summary-overview-container\">\n          <h2>What You'll Learn</h2>\n          {whatYouWillLearnParagraphs.map((paragraph, i) => {\n            return (\n              <p className=\"summary-page-description\" key={i}>\n                {paragraph}\n              </p>\n            );\n          })}\n\n          <h2>Real World Applications</h2>\n          {realWorldApplicationsParagraphs.map((paragraph, i) => {\n            return (\n              <p className=\"summary-page-description\" key={i}>\n                {paragraph}\n              </p>\n            );\n          })}\n\n          <h2>Content Overview</h2>\n          {descriptionParagraphs.map((paragraph, i) => {\n            return (\n              <p className=\"summary-page-description\" key={i}>\n                {paragraph}\n              </p>\n            );\n          })}\n        </div>\n        {submodules != null ? (\n          <div\n            className=\"summary-modules-container\"\n            style={{ height: summaryHeightCalcString }}>\n            <div className=\"summary-modules\" ref={containerRef}>\n              {submodules.map((submodule, i) => {\n                const link =\n                  moduleLink + \"/\" + filenameToSubModuleKey(submodule.filename);\n                return (\n                  <SubModuleProgressRow\n                    key={i}\n                    moduleTitle={i + \". \" + submodule.name}\n                    link={link}\n                    completionState={getCompletionState(submodule.filename)}\n                    selected={false}\n                    completionStateChanged={(state) =>\n                      updateCompletionState(submodule.filename, state)\n                    }\n                    rowClass=\"syllabus-row\"\n                    shouldShowStartBtn={true}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default SummaryPage;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n/**\n * Required Props:\n * title {String} – String representing the card title\n * description {String} – String representing the card description\n *\n * Optional Props:\n * link {String} - link to module\n * comingSoon {Boolean} True if coming soon. False default\n */\ntype Prop = {\n  title: string;\n  description: string;\n  link?: string;\n  comingSoon?: boolean;\n};\n\nfunction CatalogCard({ title, description, link, comingSoon }: Prop) {\n  const history = useHistory();\n  const onClick = () => {\n    if (link) {\n      history.push(link);\n    }\n  };\n\n  const className = comingSoon ? \"catalog-card coming-soon\" : \"catalog-card\";\n\n  return (\n    <div className={className} onClick={onClick}>\n      <h2>{title}</h2>\n      <p>{!comingSoon ? description : \"Coming Soon\"}</p>\n    </div>\n  );\n}\n\nexport default CatalogCard;\n","import React from \"react\";\nimport CatalogCard from \"./CatalogCard\";\nimport NavBar from \"../common/NavBar\";\nimport Footer from \"../common/Footer\";\n\nfunction Catalog() {\n  return (\n    <div className=\"catalog-page\">\n      <NavBar navBarType=\"catalog\" />\n      <div className=\"catalog-hero-container\">\n        <h1>Content Catalog</h1>\n        <p>Discover a whole new way of approaching data structures.</p>\n        <hr />\n      </div>\n      <div className=\"catalog-card-container\">\n        <CatalogCard\n          link=\"/learn/arrays\"\n          comingSoon={true}\n          title=\"Learn Arrays\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/linked-list\"\n          title=\"Learn Linked Lists\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/stacks\"\n          comingSoon={true}\n          title=\"Learn Stacks\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/queues\"\n          comingSoon={true}\n          title=\"Learn Queues\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/hash-tables\"\n          comingSoon={true}\n          title=\"Learn Hash Tables\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/trees\"\n          comingSoon={true}\n          title=\"Learn Trees\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n        <CatalogCard\n          link=\"/learn/graphs\"\n          comingSoon={true}\n          title=\"Learn Graphs\"\n          description=\"Learn one of the most fundamental data structures in computer science.\"\n        />\n      </div>\n      <hr />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Catalog;\n","import React from \"react\";\nimport NavBar from \"../common/NavBar\";\nimport SignInUpInputs from \"./SignInUpInputs\";\n\n// TODO: Confirm props are actually optional and that isSignIn is the only prop\n/**\n * Optional props:\n * isSignIn: {boolean} - Defaults false, true to show sign in instead of sign up\n */\ntype Props = {\n  isSignIn?: boolean;\n};\n\nfunction SignInUp({ isSignIn }: Props) {\n  const navBarType = isSignIn ? \"sign-in\" : \"sign-up\";\n  return (\n    <div>\n      <NavBar navBarType={navBarType} />\n      <SignInUpInputs isSignIn={isSignIn} />\n    </div>\n  );\n}\n\nexport default SignInUp;\n","import React, { Fragment, useState } from \"react\";\n\nfunction LinkedList() {\n  const [highlightIndex, setHighlightIndex] = useState(0);\n  const NUM_NODES = 5;\n\n  const prevNode = () => {\n    if (highlightIndex === 0) {\n      setHighlightIndex(NUM_NODES - 1);\n    } else {\n      setHighlightIndex(highlightIndex - 1);\n    }\n  };\n\n  const nextNode = () => {\n    if (highlightIndex === NUM_NODES - 1) {\n      setHighlightIndex(0);\n    } else {\n      setHighlightIndex(highlightIndex + 1);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"img-container left-image\">\n        <div className=\"linked-list-illustration-container\">\n          {[...Array(NUM_NODES)].map((_, i) => {\n            const nodeClass =\n              i === highlightIndex\n                ? \"linked-list-node linked-list-highlight\"\n                : \"linked-list-node\";\n            return (\n              <Fragment key={i}>\n                <div className={nodeClass}>{i + 1}</div>\n                {i < NUM_NODES - 1 ? (\n                  <div className=\"linked-list-pointer\" />\n                ) : null}\n              </Fragment>\n            );\n          })}\n        </div>\n        <div className=\"linked-list-controls\">\n          <button onClick={prevNode} className=\"hero-btn linked-list-btn\">\n            Prev Node\n          </button>\n          <button onClick={nextNode} className=\"hero-btn linked-list-btn\">\n            Next Node\n          </button>\n        </div>\n      </div>\n      <div className=\"text-container\">\n        <h1>Data structures, visualized.</h1>\n        <p>\n          Develop clear mental models of common computer science data structures\n          using intuitive animations and visualizations.\n        </p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LinkedList;\n","export default __webpack_public_path__ + \"static/media/checkmark.f81e5615.svg\";","import React, { Fragment } from \"react\";\nimport CheckmarkIcon from \"./images/checkmark.svg\";\n\nfunction GuidedLearning() {\n  return (\n    <Fragment>\n      <div className=\"text-container\">\n        <h1>Guided learning.</h1>\n        <p>\n          Access learning modules that guide you through the process of\n          understanding and working with each data structure.\n        </p>\n      </div>\n      <div className=\"img-container right-image\">\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-filled-home\">\n            <img src={CheckmarkIcon} alt=\"Checkmark Icon\" />\n          </div>\n          <div className=\"progress-line-filled\" />\n        </div>\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-filled-home\">\n            <img src={CheckmarkIcon} alt=\"Checkmark Icon\" />\n          </div>\n          <div className=\"progress-line-filled\" />\n        </div>\n        <div className=\"progress-row-container\">\n          <div className=\"progress-circle-home\" />\n          <div className=\"progress-line\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default GuidedLearning;\n","import React, { Fragment } from \"react\";\n\nfunction Catalog() {\n  return (\n    <Fragment>\n      <div className=\"img-container left-image catalog-card-container-homepage\">\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Linked Lists</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Arrays</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Stacks</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Queues</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Trees</h2>\n        </div>\n        <div className=\"catalog-card-homepage\">\n          <div className=\"card-circle\" />\n          <h2>Graphs</h2>\n        </div>\n      </div>\n      <div className=\"text-container\">\n        <h1>A growing catalog of content.</h1>\n        <p>\n          We are committed to covering the basics of computer science data\n          structures. You can look forward to modules ranging from Linked Lists\n          to Heaps and everything in between.\n        </p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Catalog;\n","export default __webpack_public_path__ + \"static/media/arrow-right.0c6a6f2c.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RightArrowIcon from \"./images/arrow-right.svg\";\n\ntype Props = {\n  landing?: boolean;\n};\n\nfunction Free({ landing }: Props) {\n  const history = useHistory();\n\n  const getStarted = () => {\n    history.push(\"/learn\");\n  };\n\n  const getStartedLink = !landing ? (\n    <h2 onClick={getStarted} className=\"bold\">\n      Get Started\n    </h2>\n  ) : null;\n  const getStartedArrow = !landing ? (\n    <img src={RightArrowIcon} alt=\"Arrow Right Icon\" />\n  ) : null;\n\n  return (\n    <div id=\"free-card-container\">\n      <div className=\"text-container\">\n        <h1>Free. &nbsp;For everyone.</h1>\n        <p>\n          Destructure.io is a platform created by software engineers who believe\n          quality programming resources should be accessible to anyone,\n          anywhere.\n        </p>\n        <div className=\"inline-block\">\n          <div id=\"free-get-started-container\">\n            {getStartedLink}\n            {getStartedArrow}\n          </div>\n        </div>\n      </div>\n      <div className=\"img-container right-image\">\n        <svg id=\"free-node-1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 100\">\n          <g className=\"node\">\n            <rect x=\"0\" y=\"0\" rx=\"12px\" />\n            <g className=\"node-data-field\">\n              <text x=\"10px\" y=\"55px\">\n                data\n              </text>\n              <text x=\"60px\" y=\"55px\">\n                =\n              </text>\n              <rect x=\"85px\" y=\"39px\" />\n              <rect x=\"85px\" y=\"39px\" />\n              <text\n                className=\"node-data-text\"\n                x=\"110px\"\n                y=\"51px\"\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\">\n                42\n              </text>\n            </g>\n            <g className=\"node-next-field\">\n              <text x=\"10px\" y=\"82px\">\n                next\n              </text>\n              <text x=\"60px\" y=\"82px\">\n                =\n              </text>\n              <rect x=\"85px\" y=\"66px\" />\n              <g className=\"node-pointer\">\n                <circle\n                  r=\"7px\"\n                  cx=\"110px\"\n                  cy=\"76px\"\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                />\n                <rect width=\"0px\" x=\"110px\" y=\"74px\" />\n              </g>\n            </g>\n          </g>\n        </svg>\n        <svg id=\"free-node-2\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 100\">\n          <g className=\"node\">\n            <rect x=\"0\" y=\"0\" rx=\"12px\" />\n            <g className=\"node-header\">\n              <text x=\"50px\" y=\"20px\">\n                Node\n              </text>\n            </g>\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default Free;\n","export default __webpack_public_path__ + \"static/media/arrow-down.edf1eb6a.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport DownArrowIcon from \"./images/arrow-down.svg\";\n\ntype Props = {\n  landing?: boolean;\n};\n\nfunction Hero({ landing }: Props) {\n  const history = useHistory();\n\n  const onClickHeroBtn = () => {\n    history.push(\"/learn\");\n  };\n\n  const onClickHeroChevron = () => {\n    const linkedList = document.getElementById(\"linked-list\");\n    if (linkedList != null) {\n      linkedList.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const button = !landing ? (\n    <button onClick={onClickHeroBtn} className=\"hero-btn\">\n      <span className=\"bold\">Get Started</span> – It's free!\n    </button>\n  ) : null;\n\n  return (\n    <div className=\"landing-hero-container\">\n      <h1>\n        An interactive visualization platform for learning data structures.\n      </h1>\n      {button}\n      <span id=\"chevron\" className=\"hero-circle\" onClick={onClickHeroChevron}>\n        <img src={DownArrowIcon} alt=\"Arrow Down Icon\" />\n      </span>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport NavBar from \"../common/NavBar\";\nimport Footer from \"../common/Footer\";\nimport LinkedList from \"./LinkedList\";\nimport GuidedLearning from \"./GuidedLearning\";\nimport Catalog from \"./Catalog\";\nimport Free from \"./Free\";\nimport Hero from \"./Hero\";\n\nfunction HomePage() {\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <main>\n        <Hero />\n        <div id=\"linked-list\" className=\"content-container\">\n          <LinkedList />\n        </div>\n        <div id=\"guided-container\" className=\"content-container\">\n          <GuidedLearning />\n        </div>\n        <div id=\"catalog-container\" className=\"content-container\">\n          <Catalog />\n        </div>\n        <div id=\"free-container\" className=\"content-container\">\n          <Free />\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  about: boolean;\n};\n\nfunction LandingNavBar({ about }: Props) {\n  const landingLink = about ? (\n    <Link to=\"/landing\">Home</Link>\n  ) : (\n    <Link to=\"/about\">About</Link>\n  );\n\n  return (\n    <div className=\"nav-bar-container homepage-nav-bar\">\n      <h1>destructure.io</h1>\n      <div className=\"nav-links-container\">{landingLink}</div>\n    </div>\n  );\n}\n\nexport default LandingNavBar;\n","import React from \"react\";\nimport LandingNavBar from \"../common/LandingNavBar\";\nimport Footer from \"../common/Footer\";\nimport LinkedList from \"./LinkedList\";\nimport GuidedLearning from \"./GuidedLearning\";\nimport Catalog from \"./Catalog\";\nimport Free from \"./Free\";\nimport Hero from \"./Hero\";\n\nfunction LandingPage() {\n  return (\n    <div>\n      <LandingNavBar about={false} />\n      <main>\n        <Hero landing={true} />\n        <div id=\"linked-list\" className=\"content-container\">\n          <LinkedList />\n        </div>\n        <div id=\"guided-container\" className=\"content-container\">\n          <GuidedLearning />\n        </div>\n        <div id=\"catalog-container\" className=\"content-container\">\n          <Catalog />\n        </div>\n        <div id=\"free-container\" className=\"content-container\">\n          <Free landing={true} />\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/conner-profile.cc5a23cf.jpg\";","export default __webpack_public_path__ + \"static/media/hawk-profile.75d24456.jpg\";","export default __webpack_public_path__ + \"static/media/hari-profile.a7391010.png\";","export default __webpack_public_path__ + \"static/media/zach-profile.a1905656.jpg\";","import React, { Fragment } from \"react\";\nimport ConnerProfile from \"./images/conner-profile.jpg\";\nimport HawkProfile from \"./images/hawk-profile.jpg\";\nimport HariProfile from \"./images/hari-profile.png\";\nimport ZachProfile from \"./images/zach-profile.jpg\";\n\nfunction Team() {\n  return (\n    <Fragment>\n      <h1>Team</h1>\n      <div className=\"team-card-container\">\n        <div className=\"team-card\">\n          <img src={ConnerProfile} alt=\"Conner\" />\n          <h2>Conner Ardman</h2>\n          <a href=\"https://github.com/ConnerArdman\">GitHub</a>\n        </div>\n        <div className=\"team-card\">\n          <img src={HawkProfile} alt=\"Hawk\" />\n          <h2>Hawk Ticehurst</h2>\n          <a href=\"https://github.com/hawkticehurst\">GitHub</a>\n        </div>\n        <div className=\"team-card\">\n          <img src={HariProfile} alt=\"Hari\" />\n          <h2>Hari Kaushik</h2>\n          <a href=\"https://github.com/harik98\">GitHub</a>\n        </div>\n        <div className=\"team-card\">\n          <img src={ZachProfile} alt=\"Zach\" />\n          <h2>Zach Palmer</h2>\n          <a href=\"https://github.com/zachp98\">GitHub</a>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Team;\n","import React from \"react\";\nimport NavBar from \"../common/NavBar\";\nimport Footer from \"../common/Footer\";\nimport Team from \"./Team\";\n\nfunction About() {\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <main>\n        <div className=\"team-container\">\n          <div className=\"about-text-container\">\n            <h1>What's this for?</h1>\n            <p>\n              Data structures are notoriously challenging programming concepts\n              for students who are trying to learn to code. We want to help\n              develop strong mental models of data structures and increase a\n              student's ability to succeed in technical challenges.\n            </p>\n          </div>\n          <div className=\"about-text-container\">\n            <h1>Who's this for?</h1>\n            <p>\n              We hope this will be a useful educational aid for those learning\n              programming at an intermediate level and for instructors to use as\n              supplementary material for data structures courses.\n            </p>\n          </div>\n        </div>\n        <div className=\"team-container\">\n          <Team />\n        </div>\n      </main>\n      <hr />\n      <Footer />\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { Link } from \"react-router-dom\";\n\nfunction DeviceTooSmall() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (windowWidth > 768) {\n      window.location.reload();\n    }\n  }, [windowWidth]);\n\n  const updateSize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <div className=\"device-too-small\">\n        <h1>Sorry, destructure.io requires a computer.</h1>\n        <p>\n          To properly visualize data structures, we need a larger screen than\n          available on mobile devices. Please visit the application from a\n          computer.\n        </p>\n        <p>\n          <Link to=\"/\">Back to home.</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default DeviceTooSmall;\n","import { useEffect, useRef } from \"react\";\n\ntype FixMeLater = any;\n\n// delay = null to end the callback, similar to setTimeout\n// Based on https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback: FixMeLater, delay: number) {\n  const savedCallback = useRef<Function>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PageTint from \"../common/PageTint\";\nimport useInterval from \"../../hooks/useInterval\";\nimport { getApproveCookie } from \"../../hooks/useModuleCompletionState\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction CookieConsentBanner() {\n  // const cookieApprovalStatus = getApproveCookie();\n  // const hasApprovedCookies = cookieApprovalStatus === 'true'; // this can return a string, so explicit check false\n\n  // TODO: Maker sure this logic works compared to above\n  const hasApprovedCookies = getApproveCookie();\n  const [showModal, setShowModal] = useState(false);\n  const [showBanner, setShowBanner] = useState(!hasApprovedCookies);\n  const [bannerBottom, setBannerBottom] = useState(-150);\n  const [speed, setSpeed] = useState(!hasApprovedCookies ? 10 : null);\n  const { pathname } = useLocation();\n  const [render, setRender] = useState(\n    !pathname.startsWith(\"/signup\") &&\n      pathname.startsWith(\"/signin\") &&\n      !pathname.startsWith(\"/privacy\")\n  );\n\n  useInterval(() => {\n    setBannerBottom(bannerBottom + 2);\n    if (bannerBottom === 20) {\n      setSpeed(null);\n    }\n  }, speed);\n\n  useEffect(() => {\n    setRender(\n      !pathname.startsWith(\"/signup\") &&\n        !pathname.startsWith(\"/signin\") &&\n        !pathname.startsWith(\"/privacy\")\n    );\n  }, [pathname]);\n\n  const setApproveCookie = (value) => {\n    const date = new Date();\n    date.setTime(date.getTime() + 6 * 30 * 24 * 60 * 60 * 1000); // Expires in 6 months\n    document.cookie =\n      \"destructure-cookie-approve=\" +\n      value +\n      \";expires=\" +\n      date.toUTCString() +\n      \";path=/\";\n    setShowModal(false);\n    setShowBanner(false);\n  };\n\n  // sign in / sign up have their own way to enforce cookies\n  if (!render) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {showModal ? (\n        <div>\n          <PageTint tintShown={true} clickedTint={() => setShowModal(false)} />\n          <div className=\"cookie-deny-modal\">\n            <h2>Opt Out of Cookies?</h2>\n            <p>\n              Are you sure you wish to opt-out of non-essential cookies and\n              local storage? This will prevent you from saving your progress or\n              signing in as you work through our learning modules.\n            </p>\n            <p>\n              Read more about how we use cookies on our{\" \"}\n              <Link to=\"/privacy\" onClick={() => setShowModal(false)}>\n                Privacy Policy\n              </Link>\n              .\n            </p>\n            <div className=\"cookie-deny-buttons\">\n              <button\n                className=\"hero-btn\"\n                onClick={() => setApproveCookie(false)}>\n                <span className=\"bold\">Yes</span> - Opt out of Cookies\n              </button>\n              <button\n                className=\"hero-btn\"\n                onClick={() => setApproveCookie(true)}>\n                <span className=\"bold\">No</span> - I want these features and\n                opt-in to cookies and local storage\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {!showModal && showBanner ? (\n        <div className=\"cookie-consent-banner\" style={{ bottom: bannerBottom }}>\n          <p>\n            This site uses cookies and local web storage to save your progress\n            in our learning modules. You can read more about our specific usage\n            in our <Link to=\"/privacy\">Privacy Policy</Link>. Do you agree to\n            these terms?\n          </p>\n          <div className=\"cookie-buttons\">\n            <button className=\"hero-btn\" onClick={() => setApproveCookie(true)}>\n              Accept\n            </button>\n            <button\n              className=\"hero-btn reject-btn\"\n              onClick={() => setShowModal(true)}>\n              Decline\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n}\n\nexport default CookieConsentBanner;\n","import React from \"react\";\n\ntype FixMeLater = any;\n\ntype Props = {\n  title: string;\n  text: string | FixMeLater[];\n};\n\nfunction PrivacySection({ title, text }: Props) {\n  return (\n    <div className=\"privacy-section\">\n      <h2>{title}</h2>\n      {Array.isArray(text) ? (\n        text.map((paragraph, i) => <p key={i}>{paragraph}</p>)\n      ) : (\n        <p>{text}</p>\n      )}\n    </div>\n  );\n}\n\nexport default PrivacySection;\n","import React, { useState } from \"react\";\nimport NavBar from \"../common/NavBar\";\nimport Footer from \"../common/Footer\";\nimport PrivacySection from \"./PrivacySection\";\nimport { getApproveCookie } from \"../../hooks/useModuleCompletionState\";\n\nfunction PrivacyPolicy() {\n  const [hasApprovedCookies, setHasApprovedCookies] = useState(\n    getApproveCookie()\n  ); // this can return a string, so explicit check false\n\n  const setApproveCookie = (value: boolean) => {\n    const date = new Date();\n    date.setTime(date.getTime() + 6 * 30 * 24 * 60 * 60 * 1000); // Expires in 6 months\n    document.cookie =\n      \"destructure-cookie-approve=\" +\n      value +\n      \";expires=\" +\n      date.toUTCString() +\n      \";path=/\";\n    setHasApprovedCookies(value);\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <NavBar navBarType=\"homepage\" />\n      <div className=\"privacy-policy\">\n        <header>\n          <h1>Privacy Policy</h1>\n          <p>\n            <span className=\"bold\">TL;DR:</span> We won't buy or sell data,\n            ever.\n          </p>\n        </header>\n\n        {!hasApprovedCookies ? (\n          <div className=\"privacy-policy-allow-cookies\">\n            <p>\n              You have not chosen to opt-in to cookies and local storage. This\n              will prevent the site from saving your state when you change\n              pages. Would you like to instead opt-in to cookies and local\n              storage?\n            </p>\n            <button className=\"hero-btn\" onClick={() => setApproveCookie(true)}>\n              <span className=\"bold\">Yes</span> - Opt in to Cookies and local\n              web storage\n            </button>\n          </div>\n        ) : null}\n\n        <PrivacySection\n          title=\"Introduction\"\n          text={`We take your privacy very seriously. We only collect information necessary for the proper functioning of\n            the site and nothing else. This page outlines exactly what data we collect and why we collect it, but if you\n            ever have any questions or concerns, we encourage you to contact us.`}\n        />\n\n        <PrivacySection\n          title=\"Personally Identifiable Information\"\n          text={`The only piece of personally identifiable information we collect is your email address\n            when you sign up for the site. We use this information to store your progress through our\n            learning modules, but you can completely opt-out by not signing up for an account.\n            The site will function perfectly as a \"guest\" without restrictions, and in that case we\n            will not collect any information about you.`}\n        />\n\n        <PrivacySection\n          title=\"How We Use And Store Your Information\"\n          text={[\n            <span>\n              All of our authentication and database services are run using{\" \"}\n              <a\n                target=\"__blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://policies.google.com/technologies/partner-sites\">\n                Google Firebase\n              </a>\n              , a highly trusted third party platform. When you sign up for an\n              account, we store your email and an encrypted password on\n              Firebase. Additionally, we store your current completion state of\n              every module on the site. This allows us to retain this\n              information when you leave the website.\n            </span>,\n            `We will never sell this information or any other information to any third parties.`,\n          ]}\n        />\n\n        <PrivacySection\n          title=\"What Are Cookies?\"\n          text={[\n            `A cookie is a small text file that a website stores in your browser (such as Chrome).\n            Cookies cannot be used to run any programs on your computer or install any viruses.\n            Most websites, such as destructure.io, use cookies to store information such as the current\n            user, so you stay signed in after refreshing the page.`,\n            `In addition to cookies, we also use local web storage to store more complex data.\n            Web storage works in a very similar way to cookies, with the major difference being that they\n            can store larger amounts of data.`,\n          ]}\n        />\n\n        <PrivacySection\n          title=\"How We Use Cookies\"\n          text={[\n            `All of the cookies we use are classified as \"essential cookies\". These are used to keep a\n            user signed in even after the page reloads. Since our authentication is handled by Google Firebase,\n            all of our authentication related cookies are third party cookies required for their platform to function.\n            We also use a single cookie to check if the user has opted out of non-essential storage. If you opt-out,\n            we will not share any information with Firebase and will not use local storage.`,\n            `In addition to cookies, we use local web storage to keep track of your progress through the modules\n            if you are not signed in. This allows for our \"continue as guest\" functionality to work properly. If you\n            choose to completely opt-out of local storage, we will not store this information anywhere and thus it will\n            not persist when the page is reloaded.`,\n          ]}\n        />\n\n        <PrivacySection\n          title=\"Removal of Data\"\n          text={`If you wish to have any of your information removed from our servers, please\n            contact us and we will complete your request as quickly as possible. Additionally,\n            if you choose to delete your account, all of its information will be removed from\n            our services.`}\n        />\n\n        <PrivacySection\n          title=\"Changes To This Policy\"\n          text={[\n            `We will occasionally update this policy statement to include information about new features\n            of the site or to further clarify how we handle data privacy. We encourage you to periodically\n            review this page for our latest policies.`,\n            `Regardless of these changes, our philosophy on privacy will never change, and we will never\n            sell any of your data.`,\n          ]}\n        />\n      </div>\n      <hr />\n      <Footer />\n    </div>\n  );\n}\n\nexport default PrivacyPolicy;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport LearningModule from \"./learning-module/LearningModule\";\nimport SummaryPage from \"./learning-module/SummaryPage\";\nimport Catalog from \"./catalog/Catalog\";\nimport SignInUp from \"./auth/SignInUp\";\nimport HomePage from \"./home/HomePage\";\nimport LandingPage from \"./home/LandingPage\";\nimport About from \"./home/About\";\nimport DeviceTooSmall from \"./common/DeviceTooSmall\";\nimport CookieConsentBanner from \"./privacy/CookieConsentBanner\";\nimport PrivacyPolicy from \"./privacy/PrivacyPolicy\";\nimport ScrollToTop from \"./common/ScrollToTop\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuth, UserContext } from \"../hooks/user\";\nimport \"./App.css\";\n\nfunction App() {\n  const { initializing, user } = useAuth();\n\n  if (initializing) {\n    return null;\n  }\n\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <div className=\"app\">\n          <CookieConsentBanner />\n          <ScrollToTop />\n          <Switch>\n            <Route path=\"/signin\">\n              <SignInUp isSignIn={true} />\n            </Route>\n            <Route path=\"/signup\">\n              <SignInUp isSignIn={false} />\n            </Route>\n            <Route path={\"/learn/:module/:submodule\"}>\n              {window.innerWidth <= 768 ? (\n                <DeviceTooSmall />\n              ) : (\n                <LearningModule />\n              )}\n            </Route>\n            <Route path={\"/learn/:module\"}>\n              <SummaryPage />\n            </Route>\n            <Route path={[\"/learn\", \"/catalog\"]}>\n              <Catalog />\n            </Route>\n            <Route path={\"/privacy\"}>\n              <PrivacyPolicy />\n            </Route>\n            <Route path={\"/landing\"}>\n              <LandingPage />\n            </Route>\n            <Route path={\"/about\"}>\n              <About />\n            </Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n// TODO: Update firebase config to reflect app name change\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDeMsUdMj0mx6q4VdnxkGcdbJp5OIAL2JI\",\n  authDomain: \"node-warrior.firebaseapp.com\",\n  databaseURL: \"https://node-warrior.firebaseio.com\",\n  projectId: \"node-warrior\",\n  storageBucket: \"node-warrior.appspot.com\",\n  messagingSenderId: \"1044681182278\",\n  appId: \"1:1044681182278:web:5de0f9ea5433e8b7858e47\",\n  measurementId: \"G-W82LT744WE\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}