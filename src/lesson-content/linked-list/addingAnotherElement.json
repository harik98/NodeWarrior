{
  "paragraphs": [
    "Now that we can create a linked list with a head Node, letâ€™s try adding some more elements to the list. The $code(next) field of each node should point to the next node in the list. For example, the $code(next) field of the $code(head) node should point to the second element of the list.",
    "In Java, we can access and update the next field using $italic(dot notation). For example, we can set the $code(next) field of the $code(head) node to a new node with data 1 by using $code(head.next = new Node(1)).",
    "Note that most modern languages such as Java $bold(evaluate the right side of the equals sign first) (these are called $italic(assignment) statements). This means that our code above first creates a new $code(Node) object with data set to 1. Once that Node is created it reassigns the $code(next) field of the $code(head) to that new node"
  ],
  "codeChunks": [
    {
      "type": "skipped",
      "code": {
        "java": [
          {
            "given": "class LinkedListExample {"
          }
        ]
      }
    },
    {
      "type": "hidden",
      "code": {
        "java": [
          {
            "given": "  class Node {"
          },
          {
            "given": "    int data;"
          },
          {
            "given": "    Node next;",
            "tooltip": "Reference to the next node in the list. If this is the tail node, next will be set to null."
          },
          {
            "given": ""
          },
          {
            "given": "    public Node(int data) {"
          },
          {
            "given": "      this.data = data;"
          },
          {
            "given": "      this.next = null;"
          },
          {
            "given": "    }"
          },
          {
            "given": "  }"
          },
          {
            "given": ""
          }
        ]
      }
    },
    {
      "type": "hidden",
      "code": {
        "java": [
          {
            "given": "  public static void main(string[] args) {"
          },
          {
            "given": "    Node head = createListSizeTwo();"
          },
          {
            "given": "  }"
          }
        ]
      }
    },
    {
      "type": "skipped",
      "code": {
        "java": [{
          "given": ""
        }]
      }
    },
    {
      "type": "auto",
      "code": {
        "java": [{
          "given": "  public void createListSizeTwo() {",
          "animations": [

          ]
        },
        {
          "given": "    Node head = new Node(0);",
          "animations": [
            "createNewNode,0,#node1",
            "createNewPointer,#head-pointer,head"
          ]
        },
        {
          "given": "    head.next = new Node(1);",
          "animations": [
            "createNewNode,1,#node2",
            "insertNodeAtIndex,tail"
          ]
        },
        {
          "given": "    return head;",
          "animations": [
          ]
        },
        {
          "given": "  }"
        },
        {
          "given": "}"
        }
      ]
      }
    }
  ]
}
